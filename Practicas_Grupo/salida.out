Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> Programa Clase
Rule 2     Programa -> Clase
Rule 3     Clase -> CLASS TYPEID opcional { lista_atr_metodos } ;
Rule 4     lista_atr_metodos -> Metodo ; lista_atr_metodos
Rule 5     lista_atr_metodos -> <empty>
Rule 6     lista_atr_metodos -> Atributo ; lista_atr_metodos
Rule 7     opcional -> INHERITS TYPEID
Rule 8     opcional -> <empty>
Rule 9     Atributo -> OBJECTID : TYPEID opcional_expr
Rule 10    opcional_expr -> <empty>
Rule 11    opcional_expr -> Expresion
Rule 12    Metodo -> OBJECTID ( Formal , ListFormal ) : TYPEID { Expresion }
Rule 13    Metodo -> OBJECTID ( ) : TYPEID { Expresion }
Rule 14    Formal -> OBJECTID : TYPEID
Rule 15    ListFormal -> Formal
Rule 16    ListFormal -> Formal , ListFormal
Rule 17    Expresion -> BOOL_CONST
Rule 18    Expresion -> STR_CONST
Rule 19    Expresion -> INT_CONST
Rule 20    Expresion -> OBJECTID
Rule 21    Expresion -> { listNueva }
Rule 22    Expresion -> NEW TYPEID
Rule 23    Expresion -> CASE Expresion OF CaseList ESAC
Rule 24    Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
Rule 25    Expresion -> WHILE Expresion LOOP Expresion POOL
Rule 26    Expresion -> IF Expresion THEN Expresion ELSE Expresion FI
Rule 27    Expresion -> Expresion . OBJECTID ( lstExpr )
Rule 28    Expresion -> Expresion . OBJECTID ( )
Rule 29    Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr )
Rule 30    Expresion -> Expresion @ TYPEID . OBJECTID ( )
Rule 31    Expresion -> ~ Expresion
Rule 32    Expresion -> ISVOID Expresion  [precedence=left, level=5]
Rule 33    Expresion -> NOT Expresion  [precedence=nonassoc, level=2]
Rule 34    Expresion -> ( Expresion )
Rule 35    Expresion -> Expresion = Expresion
Rule 36    Expresion -> Expresion DARROW Expresion  [precedence=nonassoc, level=2]
Rule 37    Expresion -> Expresion LE Expresion  [precedence=nonassoc, level=2]
Rule 38    Expresion -> Expresion / Expresion  [precedence=left, level=4]
Rule 39    Expresion -> Expresion * Expresion  [precedence=left, level=4]
Rule 40    Expresion -> Expresion - Expresion  [precedence=left, level=3]
Rule 41    Expresion -> NUMBER
Rule 42    Expresion -> Expresion + Expresion  [precedence=left, level=3]
Rule 43    Expresion -> IGNORE
Rule 44    Expresion -> OBJECTID ASSIGN Expresion  [precedence=right, level=1]
Rule 45    lstExpr -> Expresion
Rule 46    lstExpr -> Expresion , lstExpr
Rule 47    lstArrow -> <empty>
Rule 48    lstArrow -> , OBJECTID : TYPEID exprOpcional lstArrow
Rule 49    exprOpcional -> <empty>
Rule 50    exprOpcional -> ASSIGN Expresion  [precedence=right, level=1]
Rule 51    Case -> OBJECTID : TYPEID DARROW Expresion  [precedence=nonassoc, level=2]
Rule 52    CaseList -> Case ;
Rule 53    CaseList -> Case ; CaseList
Rule 54    listNueva -> Expresion ;
Rule 55    listNueva -> Expresion ; listNueva

Terminals, with rules where they appear:

(                    : 12 13 27 28 29 30 34
)                    : 12 13 27 28 29 30 34
*                    : 39
+                    : 42
,                    : 12 16 46 48
-                    : 40
.                    : 27 28 29 30
/                    : 38
:                    : 9 12 13 14 24 48 51
;                    : 3 4 6 52 53 54 55
=                    : 35
@                    : 29 30
ASSIGN               : 44 50
BOOL_CONST           : 17
CASE                 : 23
CLASS                : 3
DARROW               : 36 51
ELSE                 : 26
ESAC                 : 23
FI                   : 26
IF                   : 26
IGNORE               : 43
IN                   : 24
INHERITS             : 7
INT_CONST            : 19
ISVOID               : 32
LE                   : 37
LET                  : 24
LOOP                 : 25
NEW                  : 22
NOT                  : 33
NUMBER               : 41
OBJECTID             : 9 12 13 14 20 24 27 28 29 30 44 48 51
OF                   : 23
POOL                 : 25
STR_CONST            : 18
THEN                 : 26
TYPEID               : 3 7 9 12 13 14 22 24 29 30 48 51
WHILE                : 25
error                : 
{                    : 3 12 13 21
}                    : 3 12 13 21
~                    : 31

Nonterminals, with rules where they appear:

Atributo             : 6
Case                 : 52 53
CaseList             : 23 53
Clase                : 1 2
Expresion            : 11 12 13 23 24 25 25 26 26 26 27 28 29 30 31 32 33 34 35 35 36 36 37 37 38 38 39 39 40 40 42 42 44 45 46 50 51 54 55
Formal               : 12 15 16
ListFormal           : 12 16
Metodo               : 4
Programa             : 1 0
exprOpcional         : 24 48
listNueva            : 21 55
lista_atr_metodos    : 3 4 6
lstArrow             : 24 48
lstExpr              : 27 29 46
opcional             : 3
opcional_expr        : 9


state 0

    (0) S' -> . Programa
    (1) Programa -> . Programa Clase
    (2) Programa -> . Clase
    (3) Clase -> . CLASS TYPEID opcional { lista_atr_metodos } ;
    CLASS           shift and go to state 3

    Programa                       shift and go to state 1
    Clase                          shift and go to state 2

state 1

    (0) S' -> Programa .
    (1) Programa -> Programa . Clase
    (3) Clase -> . CLASS TYPEID opcional { lista_atr_metodos } ;
    CLASS           shift and go to state 3

    Clase                          shift and go to state 4

state 2

    (2) Programa -> Clase .
    CLASS           reduce using rule 2 (Programa -> Clase .)
    $end            reduce using rule 2 (Programa -> Clase .)


state 3

    (3) Clase -> CLASS . TYPEID opcional { lista_atr_metodos } ;
    TYPEID          shift and go to state 5


state 4

    (1) Programa -> Programa Clase .
    CLASS           reduce using rule 1 (Programa -> Programa Clase .)
    $end            reduce using rule 1 (Programa -> Programa Clase .)


state 5

    (3) Clase -> CLASS TYPEID . opcional { lista_atr_metodos } ;
    (7) opcional -> . INHERITS TYPEID
    (8) opcional -> .
    INHERITS        shift and go to state 7
    {               reduce using rule 8 (opcional -> .)

    opcional                       shift and go to state 6

state 6

    (3) Clase -> CLASS TYPEID opcional . { lista_atr_metodos } ;
    {               shift and go to state 8


state 7

    (7) opcional -> INHERITS . TYPEID
    TYPEID          shift and go to state 9


state 8

    (3) Clase -> CLASS TYPEID opcional { . lista_atr_metodos } ;
    (4) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (5) lista_atr_metodos -> .
    (6) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (12) Metodo -> . OBJECTID ( Formal , ListFormal ) : TYPEID { Expresion }
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 5 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    lista_atr_metodos              shift and go to state 10
    Metodo                         shift and go to state 11
    Atributo                       shift and go to state 12

state 9

    (7) opcional -> INHERITS TYPEID .
    {               reduce using rule 7 (opcional -> INHERITS TYPEID .)


state 10

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos . } ;
    }               shift and go to state 14


state 11

    (4) lista_atr_metodos -> Metodo . ; lista_atr_metodos
    ;               shift and go to state 15


state 12

    (6) lista_atr_metodos -> Atributo . ; lista_atr_metodos
    ;               shift and go to state 16


state 13

    (12) Metodo -> OBJECTID . ( Formal , ListFormal ) : TYPEID { Expresion }
    (13) Metodo -> OBJECTID . ( ) : TYPEID { Expresion }
    (9) Atributo -> OBJECTID . : TYPEID opcional_expr
    (               shift and go to state 17
    :               shift and go to state 18


state 14

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos } . ;
    ;               shift and go to state 19


state 15

    (4) lista_atr_metodos -> Metodo ; . lista_atr_metodos
    (4) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (5) lista_atr_metodos -> .
    (6) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (12) Metodo -> . OBJECTID ( Formal , ListFormal ) : TYPEID { Expresion }
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 5 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    Metodo                         shift and go to state 11
    lista_atr_metodos              shift and go to state 20
    Atributo                       shift and go to state 12

state 16

    (6) lista_atr_metodos -> Atributo ; . lista_atr_metodos
    (4) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (5) lista_atr_metodos -> .
    (6) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (12) Metodo -> . OBJECTID ( Formal , ListFormal ) : TYPEID { Expresion }
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 5 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    Atributo                       shift and go to state 12
    lista_atr_metodos              shift and go to state 21
    Metodo                         shift and go to state 11

state 17

    (12) Metodo -> OBJECTID ( . Formal , ListFormal ) : TYPEID { Expresion }
    (13) Metodo -> OBJECTID ( . ) : TYPEID { Expresion }
    (14) Formal -> . OBJECTID : TYPEID
    )               shift and go to state 24
    OBJECTID        shift and go to state 22

    Formal                         shift and go to state 23

state 18

    (9) Atributo -> OBJECTID : . TYPEID opcional_expr
    TYPEID          shift and go to state 25


state 19

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .
    CLASS           reduce using rule 3 (Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .)
    $end            reduce using rule 3 (Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .)


state 20

    (4) lista_atr_metodos -> Metodo ; lista_atr_metodos .
    }               reduce using rule 4 (lista_atr_metodos -> Metodo ; lista_atr_metodos .)


state 21

    (6) lista_atr_metodos -> Atributo ; lista_atr_metodos .
    }               reduce using rule 6 (lista_atr_metodos -> Atributo ; lista_atr_metodos .)


state 22

    (14) Formal -> OBJECTID . : TYPEID
    :               shift and go to state 26


state 23

    (12) Metodo -> OBJECTID ( Formal . , ListFormal ) : TYPEID { Expresion }
    ,               shift and go to state 27


state 24

    (13) Metodo -> OBJECTID ( ) . : TYPEID { Expresion }
    :               shift and go to state 28


state 25

    (9) Atributo -> OBJECTID : TYPEID . opcional_expr
    (10) opcional_expr -> .
    (11) opcional_expr -> . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    ;               reduce using rule 10 (opcional_expr -> .)
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    opcional_expr                  shift and go to state 30
    Expresion                      shift and go to state 31

state 26

    (14) Formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 47


state 27

    (12) Metodo -> OBJECTID ( Formal , . ListFormal ) : TYPEID { Expresion }
    (15) ListFormal -> . Formal
    (16) ListFormal -> . Formal , ListFormal
    (14) Formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 22

    Formal                         shift and go to state 48
    ListFormal                     shift and go to state 49

state 28

    (13) Metodo -> OBJECTID ( ) : . TYPEID { Expresion }
    TYPEID          shift and go to state 50


state 29

    (20) Expresion -> OBJECTID .
    (44) Expresion -> OBJECTID . ASSIGN Expresion
    .               reduce using rule 20 (Expresion -> OBJECTID .)
    @               reduce using rule 20 (Expresion -> OBJECTID .)
    =               reduce using rule 20 (Expresion -> OBJECTID .)
    DARROW          reduce using rule 20 (Expresion -> OBJECTID .)
    LE              reduce using rule 20 (Expresion -> OBJECTID .)
    /               reduce using rule 20 (Expresion -> OBJECTID .)
    *               reduce using rule 20 (Expresion -> OBJECTID .)
    -               reduce using rule 20 (Expresion -> OBJECTID .)
    +               reduce using rule 20 (Expresion -> OBJECTID .)
    ;               reduce using rule 20 (Expresion -> OBJECTID .)
    OF              reduce using rule 20 (Expresion -> OBJECTID .)
    LOOP            reduce using rule 20 (Expresion -> OBJECTID .)
    THEN            reduce using rule 20 (Expresion -> OBJECTID .)
    )               reduce using rule 20 (Expresion -> OBJECTID .)
    }               reduce using rule 20 (Expresion -> OBJECTID .)
    POOL            reduce using rule 20 (Expresion -> OBJECTID .)
    ELSE            reduce using rule 20 (Expresion -> OBJECTID .)
    ,               reduce using rule 20 (Expresion -> OBJECTID .)
    IN              reduce using rule 20 (Expresion -> OBJECTID .)
    FI              reduce using rule 20 (Expresion -> OBJECTID .)
    ASSIGN          shift and go to state 51


state 30

    (9) Atributo -> OBJECTID : TYPEID opcional_expr .
    ;               reduce using rule 9 (Atributo -> OBJECTID : TYPEID opcional_expr .)


state 31

    (11) opcional_expr -> Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    ;               reduce using rule 11 (opcional_expr -> Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 32

    (17) Expresion -> BOOL_CONST .
    .               reduce using rule 17 (Expresion -> BOOL_CONST .)
    @               reduce using rule 17 (Expresion -> BOOL_CONST .)
    =               reduce using rule 17 (Expresion -> BOOL_CONST .)
    DARROW          reduce using rule 17 (Expresion -> BOOL_CONST .)
    LE              reduce using rule 17 (Expresion -> BOOL_CONST .)
    /               reduce using rule 17 (Expresion -> BOOL_CONST .)
    *               reduce using rule 17 (Expresion -> BOOL_CONST .)
    -               reduce using rule 17 (Expresion -> BOOL_CONST .)
    +               reduce using rule 17 (Expresion -> BOOL_CONST .)
    ;               reduce using rule 17 (Expresion -> BOOL_CONST .)
    OF              reduce using rule 17 (Expresion -> BOOL_CONST .)
    LOOP            reduce using rule 17 (Expresion -> BOOL_CONST .)
    THEN            reduce using rule 17 (Expresion -> BOOL_CONST .)
    )               reduce using rule 17 (Expresion -> BOOL_CONST .)
    }               reduce using rule 17 (Expresion -> BOOL_CONST .)
    POOL            reduce using rule 17 (Expresion -> BOOL_CONST .)
    ELSE            reduce using rule 17 (Expresion -> BOOL_CONST .)
    ,               reduce using rule 17 (Expresion -> BOOL_CONST .)
    IN              reduce using rule 17 (Expresion -> BOOL_CONST .)
    FI              reduce using rule 17 (Expresion -> BOOL_CONST .)


state 33

    (18) Expresion -> STR_CONST .
    .               reduce using rule 18 (Expresion -> STR_CONST .)
    @               reduce using rule 18 (Expresion -> STR_CONST .)
    =               reduce using rule 18 (Expresion -> STR_CONST .)
    DARROW          reduce using rule 18 (Expresion -> STR_CONST .)
    LE              reduce using rule 18 (Expresion -> STR_CONST .)
    /               reduce using rule 18 (Expresion -> STR_CONST .)
    *               reduce using rule 18 (Expresion -> STR_CONST .)
    -               reduce using rule 18 (Expresion -> STR_CONST .)
    +               reduce using rule 18 (Expresion -> STR_CONST .)
    ;               reduce using rule 18 (Expresion -> STR_CONST .)
    OF              reduce using rule 18 (Expresion -> STR_CONST .)
    LOOP            reduce using rule 18 (Expresion -> STR_CONST .)
    THEN            reduce using rule 18 (Expresion -> STR_CONST .)
    )               reduce using rule 18 (Expresion -> STR_CONST .)
    }               reduce using rule 18 (Expresion -> STR_CONST .)
    POOL            reduce using rule 18 (Expresion -> STR_CONST .)
    ELSE            reduce using rule 18 (Expresion -> STR_CONST .)
    ,               reduce using rule 18 (Expresion -> STR_CONST .)
    IN              reduce using rule 18 (Expresion -> STR_CONST .)
    FI              reduce using rule 18 (Expresion -> STR_CONST .)


state 34

    (19) Expresion -> INT_CONST .
    .               reduce using rule 19 (Expresion -> INT_CONST .)
    @               reduce using rule 19 (Expresion -> INT_CONST .)
    =               reduce using rule 19 (Expresion -> INT_CONST .)
    DARROW          reduce using rule 19 (Expresion -> INT_CONST .)
    LE              reduce using rule 19 (Expresion -> INT_CONST .)
    /               reduce using rule 19 (Expresion -> INT_CONST .)
    *               reduce using rule 19 (Expresion -> INT_CONST .)
    -               reduce using rule 19 (Expresion -> INT_CONST .)
    +               reduce using rule 19 (Expresion -> INT_CONST .)
    ;               reduce using rule 19 (Expresion -> INT_CONST .)
    OF              reduce using rule 19 (Expresion -> INT_CONST .)
    LOOP            reduce using rule 19 (Expresion -> INT_CONST .)
    THEN            reduce using rule 19 (Expresion -> INT_CONST .)
    )               reduce using rule 19 (Expresion -> INT_CONST .)
    }               reduce using rule 19 (Expresion -> INT_CONST .)
    POOL            reduce using rule 19 (Expresion -> INT_CONST .)
    ELSE            reduce using rule 19 (Expresion -> INT_CONST .)
    ,               reduce using rule 19 (Expresion -> INT_CONST .)
    IN              reduce using rule 19 (Expresion -> INT_CONST .)
    FI              reduce using rule 19 (Expresion -> INT_CONST .)


state 35

    (21) Expresion -> { . listNueva }
    (54) listNueva -> . Expresion ;
    (55) listNueva -> . Expresion ; listNueva
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    listNueva                      shift and go to state 61
    Expresion                      shift and go to state 62

state 36

    (22) Expresion -> NEW . TYPEID
    TYPEID          shift and go to state 63


state 37

    (23) Expresion -> CASE . Expresion OF CaseList ESAC
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 64

state 38

    (24) Expresion -> LET . OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    OBJECTID        shift and go to state 65


state 39

    (25) Expresion -> WHILE . Expresion LOOP Expresion POOL
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 66

state 40

    (26) Expresion -> IF . Expresion THEN Expresion ELSE Expresion FI
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 67

state 41

    (34) Expresion -> ( . Expresion )
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 68

state 42

    (31) Expresion -> ~ . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 69

state 43

    (32) Expresion -> ISVOID . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 70

state 44

    (33) Expresion -> NOT . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 71

state 45

    (41) Expresion -> NUMBER .
    .               reduce using rule 41 (Expresion -> NUMBER .)
    @               reduce using rule 41 (Expresion -> NUMBER .)
    =               reduce using rule 41 (Expresion -> NUMBER .)
    DARROW          reduce using rule 41 (Expresion -> NUMBER .)
    LE              reduce using rule 41 (Expresion -> NUMBER .)
    /               reduce using rule 41 (Expresion -> NUMBER .)
    *               reduce using rule 41 (Expresion -> NUMBER .)
    -               reduce using rule 41 (Expresion -> NUMBER .)
    +               reduce using rule 41 (Expresion -> NUMBER .)
    ;               reduce using rule 41 (Expresion -> NUMBER .)
    OF              reduce using rule 41 (Expresion -> NUMBER .)
    LOOP            reduce using rule 41 (Expresion -> NUMBER .)
    THEN            reduce using rule 41 (Expresion -> NUMBER .)
    )               reduce using rule 41 (Expresion -> NUMBER .)
    }               reduce using rule 41 (Expresion -> NUMBER .)
    POOL            reduce using rule 41 (Expresion -> NUMBER .)
    ELSE            reduce using rule 41 (Expresion -> NUMBER .)
    ,               reduce using rule 41 (Expresion -> NUMBER .)
    IN              reduce using rule 41 (Expresion -> NUMBER .)
    FI              reduce using rule 41 (Expresion -> NUMBER .)


state 46

    (43) Expresion -> IGNORE .
    .               reduce using rule 43 (Expresion -> IGNORE .)
    @               reduce using rule 43 (Expresion -> IGNORE .)
    =               reduce using rule 43 (Expresion -> IGNORE .)
    DARROW          reduce using rule 43 (Expresion -> IGNORE .)
    LE              reduce using rule 43 (Expresion -> IGNORE .)
    /               reduce using rule 43 (Expresion -> IGNORE .)
    *               reduce using rule 43 (Expresion -> IGNORE .)
    -               reduce using rule 43 (Expresion -> IGNORE .)
    +               reduce using rule 43 (Expresion -> IGNORE .)
    ;               reduce using rule 43 (Expresion -> IGNORE .)
    OF              reduce using rule 43 (Expresion -> IGNORE .)
    LOOP            reduce using rule 43 (Expresion -> IGNORE .)
    THEN            reduce using rule 43 (Expresion -> IGNORE .)
    )               reduce using rule 43 (Expresion -> IGNORE .)
    }               reduce using rule 43 (Expresion -> IGNORE .)
    POOL            reduce using rule 43 (Expresion -> IGNORE .)
    ELSE            reduce using rule 43 (Expresion -> IGNORE .)
    ,               reduce using rule 43 (Expresion -> IGNORE .)
    IN              reduce using rule 43 (Expresion -> IGNORE .)
    FI              reduce using rule 43 (Expresion -> IGNORE .)


state 47

    (14) Formal -> OBJECTID : TYPEID .
    ,               reduce using rule 14 (Formal -> OBJECTID : TYPEID .)
    )               reduce using rule 14 (Formal -> OBJECTID : TYPEID .)


state 48

    (15) ListFormal -> Formal .
    (16) ListFormal -> Formal . , ListFormal
    )               reduce using rule 15 (ListFormal -> Formal .)
    ,               shift and go to state 72


state 49

    (12) Metodo -> OBJECTID ( Formal , ListFormal . ) : TYPEID { Expresion }
    )               shift and go to state 73


state 50

    (13) Metodo -> OBJECTID ( ) : TYPEID . { Expresion }
    {               shift and go to state 74


state 51

    (44) Expresion -> OBJECTID ASSIGN . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 75

state 52

    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    OBJECTID        shift and go to state 76


state 53

    (29) Expresion -> Expresion @ . TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 77


state 54

    (35) Expresion -> Expresion = . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 78

state 55

    (36) Expresion -> Expresion DARROW . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 79

state 56

    (37) Expresion -> Expresion LE . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 80

state 57

    (38) Expresion -> Expresion / . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 81

state 58

    (39) Expresion -> Expresion * . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 82

state 59

    (40) Expresion -> Expresion - . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 83

state 60

    (42) Expresion -> Expresion + . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 84

state 61

    (21) Expresion -> { listNueva . }
    }               shift and go to state 85


state 62

    (54) listNueva -> Expresion . ;
    (55) listNueva -> Expresion . ; listNueva
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    ;               shift and go to state 86
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 63

    (22) Expresion -> NEW TYPEID .
    .               reduce using rule 22 (Expresion -> NEW TYPEID .)
    @               reduce using rule 22 (Expresion -> NEW TYPEID .)
    =               reduce using rule 22 (Expresion -> NEW TYPEID .)
    DARROW          reduce using rule 22 (Expresion -> NEW TYPEID .)
    LE              reduce using rule 22 (Expresion -> NEW TYPEID .)
    /               reduce using rule 22 (Expresion -> NEW TYPEID .)
    *               reduce using rule 22 (Expresion -> NEW TYPEID .)
    -               reduce using rule 22 (Expresion -> NEW TYPEID .)
    +               reduce using rule 22 (Expresion -> NEW TYPEID .)
    ;               reduce using rule 22 (Expresion -> NEW TYPEID .)
    OF              reduce using rule 22 (Expresion -> NEW TYPEID .)
    LOOP            reduce using rule 22 (Expresion -> NEW TYPEID .)
    THEN            reduce using rule 22 (Expresion -> NEW TYPEID .)
    )               reduce using rule 22 (Expresion -> NEW TYPEID .)
    }               reduce using rule 22 (Expresion -> NEW TYPEID .)
    POOL            reduce using rule 22 (Expresion -> NEW TYPEID .)
    ELSE            reduce using rule 22 (Expresion -> NEW TYPEID .)
    ,               reduce using rule 22 (Expresion -> NEW TYPEID .)
    IN              reduce using rule 22 (Expresion -> NEW TYPEID .)
    FI              reduce using rule 22 (Expresion -> NEW TYPEID .)


state 64

    (23) Expresion -> CASE Expresion . OF CaseList ESAC
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    OF              shift and go to state 87
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 65

    (24) Expresion -> LET OBJECTID . : TYPEID exprOpcional lstArrow IN Expresion
    :               shift and go to state 88


state 66

    (25) Expresion -> WHILE Expresion . LOOP Expresion POOL
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    LOOP            shift and go to state 89
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 67

    (26) Expresion -> IF Expresion . THEN Expresion ELSE Expresion FI
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    THEN            shift and go to state 90
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 68

    (34) Expresion -> ( Expresion . )
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    )               shift and go to state 91
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 69

    (31) Expresion -> ~ Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 31 (Expresion -> ~ Expresion .)
    OF              reduce using rule 31 (Expresion -> ~ Expresion .)
    LOOP            reduce using rule 31 (Expresion -> ~ Expresion .)
    THEN            reduce using rule 31 (Expresion -> ~ Expresion .)
    )               reduce using rule 31 (Expresion -> ~ Expresion .)
    }               reduce using rule 31 (Expresion -> ~ Expresion .)
    POOL            reduce using rule 31 (Expresion -> ~ Expresion .)
    ELSE            reduce using rule 31 (Expresion -> ~ Expresion .)
    ,               reduce using rule 31 (Expresion -> ~ Expresion .)
    IN              reduce using rule 31 (Expresion -> ~ Expresion .)
    FI              reduce using rule 31 (Expresion -> ~ Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 70

    (32) Expresion -> ISVOID Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    DARROW          reduce using rule 32 (Expresion -> ISVOID Expresion .)
    LE              reduce using rule 32 (Expresion -> ISVOID Expresion .)
    /               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    *               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    -               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    +               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    ;               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    OF              reduce using rule 32 (Expresion -> ISVOID Expresion .)
    LOOP            reduce using rule 32 (Expresion -> ISVOID Expresion .)
    THEN            reduce using rule 32 (Expresion -> ISVOID Expresion .)
    )               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    }               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    POOL            reduce using rule 32 (Expresion -> ISVOID Expresion .)
    ELSE            reduce using rule 32 (Expresion -> ISVOID Expresion .)
    ,               reduce using rule 32 (Expresion -> ISVOID Expresion .)
    IN              reduce using rule 32 (Expresion -> ISVOID Expresion .)
    FI              reduce using rule 32 (Expresion -> ISVOID Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 71

    (33) Expresion -> NOT Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 33 (Expresion -> NOT Expresion .)
    DARROW          reduce using rule 33 (Expresion -> NOT Expresion .)
    LE              reduce using rule 33 (Expresion -> NOT Expresion .)
    ;               reduce using rule 33 (Expresion -> NOT Expresion .)
    OF              reduce using rule 33 (Expresion -> NOT Expresion .)
    LOOP            reduce using rule 33 (Expresion -> NOT Expresion .)
    THEN            reduce using rule 33 (Expresion -> NOT Expresion .)
    )               reduce using rule 33 (Expresion -> NOT Expresion .)
    }               reduce using rule 33 (Expresion -> NOT Expresion .)
    POOL            reduce using rule 33 (Expresion -> NOT Expresion .)
    ELSE            reduce using rule 33 (Expresion -> NOT Expresion .)
    ,               reduce using rule 33 (Expresion -> NOT Expresion .)
    IN              reduce using rule 33 (Expresion -> NOT Expresion .)
    FI              reduce using rule 33 (Expresion -> NOT Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 72

    (16) ListFormal -> Formal , . ListFormal
    (15) ListFormal -> . Formal
    (16) ListFormal -> . Formal , ListFormal
    (14) Formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 22

    Formal                         shift and go to state 48
    ListFormal                     shift and go to state 92

state 73

    (12) Metodo -> OBJECTID ( Formal , ListFormal ) . : TYPEID { Expresion }
    :               shift and go to state 93


state 74

    (13) Metodo -> OBJECTID ( ) : TYPEID { . Expresion }
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 94

state 75

    (44) Expresion -> OBJECTID ASSIGN Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    ;               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    OF              reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    LOOP            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    THEN            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    )               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    }               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    POOL            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    ELSE            reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    ,               reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    IN              reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    FI              reduce using rule 44 (Expresion -> OBJECTID ASSIGN Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 76

    (27) Expresion -> Expresion . OBJECTID . ( lstExpr )
    (28) Expresion -> Expresion . OBJECTID . ( )
    (               shift and go to state 95


state 77

    (29) Expresion -> Expresion @ TYPEID . . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 96


state 78

    (35) Expresion -> Expresion = Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 35 (Expresion -> Expresion = Expresion .)
    OF              reduce using rule 35 (Expresion -> Expresion = Expresion .)
    LOOP            reduce using rule 35 (Expresion -> Expresion = Expresion .)
    THEN            reduce using rule 35 (Expresion -> Expresion = Expresion .)
    )               reduce using rule 35 (Expresion -> Expresion = Expresion .)
    }               reduce using rule 35 (Expresion -> Expresion = Expresion .)
    POOL            reduce using rule 35 (Expresion -> Expresion = Expresion .)
    ELSE            reduce using rule 35 (Expresion -> Expresion = Expresion .)
    ,               reduce using rule 35 (Expresion -> Expresion = Expresion .)
    IN              reduce using rule 35 (Expresion -> Expresion = Expresion .)
    FI              reduce using rule 35 (Expresion -> Expresion = Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 79

    (36) Expresion -> Expresion DARROW Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    DARROW          reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    LE              reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    ;               reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    OF              reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    LOOP            reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    THEN            reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    )               reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    }               reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    POOL            reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    ELSE            reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    ,               reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    IN              reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    FI              reduce using rule 36 (Expresion -> Expresion DARROW Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 80

    (37) Expresion -> Expresion LE Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    DARROW          reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    LE              reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    ;               reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    OF              reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    LOOP            reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    THEN            reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    )               reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    }               reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    POOL            reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    ELSE            reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    ,               reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    IN              reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    FI              reduce using rule 37 (Expresion -> Expresion LE Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 81

    (38) Expresion -> Expresion / Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    DARROW          reduce using rule 38 (Expresion -> Expresion / Expresion .)
    LE              reduce using rule 38 (Expresion -> Expresion / Expresion .)
    /               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    *               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    -               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    +               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    ;               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    OF              reduce using rule 38 (Expresion -> Expresion / Expresion .)
    LOOP            reduce using rule 38 (Expresion -> Expresion / Expresion .)
    THEN            reduce using rule 38 (Expresion -> Expresion / Expresion .)
    )               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    }               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    POOL            reduce using rule 38 (Expresion -> Expresion / Expresion .)
    ELSE            reduce using rule 38 (Expresion -> Expresion / Expresion .)
    ,               reduce using rule 38 (Expresion -> Expresion / Expresion .)
    IN              reduce using rule 38 (Expresion -> Expresion / Expresion .)
    FI              reduce using rule 38 (Expresion -> Expresion / Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 82

    (39) Expresion -> Expresion * Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    DARROW          reduce using rule 39 (Expresion -> Expresion * Expresion .)
    LE              reduce using rule 39 (Expresion -> Expresion * Expresion .)
    /               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    *               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    -               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    +               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    ;               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    OF              reduce using rule 39 (Expresion -> Expresion * Expresion .)
    LOOP            reduce using rule 39 (Expresion -> Expresion * Expresion .)
    THEN            reduce using rule 39 (Expresion -> Expresion * Expresion .)
    )               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    }               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    POOL            reduce using rule 39 (Expresion -> Expresion * Expresion .)
    ELSE            reduce using rule 39 (Expresion -> Expresion * Expresion .)
    ,               reduce using rule 39 (Expresion -> Expresion * Expresion .)
    IN              reduce using rule 39 (Expresion -> Expresion * Expresion .)
    FI              reduce using rule 39 (Expresion -> Expresion * Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53


state 83

    (40) Expresion -> Expresion - Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    DARROW          reduce using rule 40 (Expresion -> Expresion - Expresion .)
    LE              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    -               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    +               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ;               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    OF              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    LOOP            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    THEN            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    )               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    }               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    POOL            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ELSE            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ,               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    IN              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    FI              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58


state 84

    (42) Expresion -> Expresion + Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    =               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    DARROW          reduce using rule 42 (Expresion -> Expresion + Expresion .)
    LE              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    -               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    +               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    ;               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    OF              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    LOOP            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    THEN            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    )               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    }               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    POOL            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    ELSE            reduce using rule 42 (Expresion -> Expresion + Expresion .)
    ,               reduce using rule 42 (Expresion -> Expresion + Expresion .)
    IN              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    FI              reduce using rule 42 (Expresion -> Expresion + Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    /               shift and go to state 57
    *               shift and go to state 58


state 85

    (21) Expresion -> { listNueva } .
    .               reduce using rule 21 (Expresion -> { listNueva } .)
    @               reduce using rule 21 (Expresion -> { listNueva } .)
    =               reduce using rule 21 (Expresion -> { listNueva } .)
    DARROW          reduce using rule 21 (Expresion -> { listNueva } .)
    LE              reduce using rule 21 (Expresion -> { listNueva } .)
    /               reduce using rule 21 (Expresion -> { listNueva } .)
    *               reduce using rule 21 (Expresion -> { listNueva } .)
    -               reduce using rule 21 (Expresion -> { listNueva } .)
    +               reduce using rule 21 (Expresion -> { listNueva } .)
    ;               reduce using rule 21 (Expresion -> { listNueva } .)
    OF              reduce using rule 21 (Expresion -> { listNueva } .)
    LOOP            reduce using rule 21 (Expresion -> { listNueva } .)
    THEN            reduce using rule 21 (Expresion -> { listNueva } .)
    )               reduce using rule 21 (Expresion -> { listNueva } .)
    }               reduce using rule 21 (Expresion -> { listNueva } .)
    POOL            reduce using rule 21 (Expresion -> { listNueva } .)
    ELSE            reduce using rule 21 (Expresion -> { listNueva } .)
    ,               reduce using rule 21 (Expresion -> { listNueva } .)
    IN              reduce using rule 21 (Expresion -> { listNueva } .)
    FI              reduce using rule 21 (Expresion -> { listNueva } .)


state 86

    (54) listNueva -> Expresion ; .
    (55) listNueva -> Expresion ; . listNueva
    (54) listNueva -> . Expresion ;
    (55) listNueva -> . Expresion ; listNueva
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    }               reduce using rule 54 (listNueva -> Expresion ; .)
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 62
    listNueva                      shift and go to state 97

state 87

    (23) Expresion -> CASE Expresion OF . CaseList ESAC
    (52) CaseList -> . Case ;
    (53) CaseList -> . Case ; CaseList
    (51) Case -> . OBJECTID : TYPEID DARROW Expresion
    OBJECTID        shift and go to state 100

    CaseList                       shift and go to state 98
    Case                           shift and go to state 99

state 88

    (24) Expresion -> LET OBJECTID : . TYPEID exprOpcional lstArrow IN Expresion
    TYPEID          shift and go to state 101


state 89

    (25) Expresion -> WHILE Expresion LOOP . Expresion POOL
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 102

state 90

    (26) Expresion -> IF Expresion THEN . Expresion ELSE Expresion FI
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 103

state 91

    (34) Expresion -> ( Expresion ) .
    .               reduce using rule 34 (Expresion -> ( Expresion ) .)
    @               reduce using rule 34 (Expresion -> ( Expresion ) .)
    =               reduce using rule 34 (Expresion -> ( Expresion ) .)
    DARROW          reduce using rule 34 (Expresion -> ( Expresion ) .)
    LE              reduce using rule 34 (Expresion -> ( Expresion ) .)
    /               reduce using rule 34 (Expresion -> ( Expresion ) .)
    *               reduce using rule 34 (Expresion -> ( Expresion ) .)
    -               reduce using rule 34 (Expresion -> ( Expresion ) .)
    +               reduce using rule 34 (Expresion -> ( Expresion ) .)
    ;               reduce using rule 34 (Expresion -> ( Expresion ) .)
    OF              reduce using rule 34 (Expresion -> ( Expresion ) .)
    LOOP            reduce using rule 34 (Expresion -> ( Expresion ) .)
    THEN            reduce using rule 34 (Expresion -> ( Expresion ) .)
    )               reduce using rule 34 (Expresion -> ( Expresion ) .)
    }               reduce using rule 34 (Expresion -> ( Expresion ) .)
    POOL            reduce using rule 34 (Expresion -> ( Expresion ) .)
    ELSE            reduce using rule 34 (Expresion -> ( Expresion ) .)
    ,               reduce using rule 34 (Expresion -> ( Expresion ) .)
    IN              reduce using rule 34 (Expresion -> ( Expresion ) .)
    FI              reduce using rule 34 (Expresion -> ( Expresion ) .)


state 92

    (16) ListFormal -> Formal , ListFormal .
    )               reduce using rule 16 (ListFormal -> Formal , ListFormal .)


state 93

    (12) Metodo -> OBJECTID ( Formal , ListFormal ) : . TYPEID { Expresion }
    TYPEID          shift and go to state 104


state 94

    (13) Metodo -> OBJECTID ( ) : TYPEID { Expresion . }
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    }               shift and go to state 105
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 95

    (27) Expresion -> Expresion . OBJECTID ( . lstExpr )
    (28) Expresion -> Expresion . OBJECTID ( . )
    (45) lstExpr -> . Expresion
    (46) lstExpr -> . Expresion , lstExpr
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    )               shift and go to state 108
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 106
    lstExpr                        shift and go to state 107

state 96

    (29) Expresion -> Expresion @ TYPEID . . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 109


state 97

    (55) listNueva -> Expresion ; listNueva .
    }               reduce using rule 55 (listNueva -> Expresion ; listNueva .)


state 98

    (23) Expresion -> CASE Expresion OF CaseList . ESAC
    ESAC            shift and go to state 110


state 99

    (52) CaseList -> Case . ;
    (53) CaseList -> Case . ; CaseList
    ;               shift and go to state 111


state 100

    (51) Case -> OBJECTID . : TYPEID DARROW Expresion
    :               shift and go to state 112


state 101

    (24) Expresion -> LET OBJECTID : TYPEID . exprOpcional lstArrow IN Expresion
    (49) exprOpcional -> .
    (50) exprOpcional -> . ASSIGN Expresion
    ,               reduce using rule 49 (exprOpcional -> .)
    IN              reduce using rule 49 (exprOpcional -> .)
    ASSIGN          shift and go to state 114

    exprOpcional                   shift and go to state 113

state 102

    (25) Expresion -> WHILE Expresion LOOP Expresion . POOL
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    POOL            shift and go to state 115
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 103

    (26) Expresion -> IF Expresion THEN Expresion . ELSE Expresion FI
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    ELSE            shift and go to state 116
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 104

    (12) Metodo -> OBJECTID ( Formal , ListFormal ) : TYPEID . { Expresion }
    {               shift and go to state 117


state 105

    (13) Metodo -> OBJECTID ( ) : TYPEID { Expresion } .
    ;               reduce using rule 13 (Metodo -> OBJECTID ( ) : TYPEID { Expresion } .)


state 106

    (45) lstExpr -> Expresion .
    (46) lstExpr -> Expresion . , lstExpr
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    )               reduce using rule 45 (lstExpr -> Expresion .)
    ,               shift and go to state 118
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 107

    (27) Expresion -> Expresion . OBJECTID ( lstExpr . )
    )               shift and go to state 119


state 108

    (28) Expresion -> Expresion . OBJECTID ( ) .
    .               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    @               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    =               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    DARROW          reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    LE              reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    /               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    *               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    -               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    +               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    ;               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    OF              reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    LOOP            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    THEN            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    )               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    }               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    POOL            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    ELSE            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    ,               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    IN              reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    FI              reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)


state 109

    (29) Expresion -> Expresion @ TYPEID . OBJECTID . ( lstExpr )
    (30) Expresion -> Expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 120


state 110

    (23) Expresion -> CASE Expresion OF CaseList ESAC .
    .               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    @               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    =               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    DARROW          reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    LE              reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    /               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    *               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    -               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    +               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    ;               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    OF              reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    LOOP            reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    THEN            reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    )               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    }               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    POOL            reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    ELSE            reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    ,               reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    IN              reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)
    FI              reduce using rule 23 (Expresion -> CASE Expresion OF CaseList ESAC .)


state 111

    (52) CaseList -> Case ; .
    (53) CaseList -> Case ; . CaseList
    (52) CaseList -> . Case ;
    (53) CaseList -> . Case ; CaseList
    (51) Case -> . OBJECTID : TYPEID DARROW Expresion
    ESAC            reduce using rule 52 (CaseList -> Case ; .)
    OBJECTID        shift and go to state 100

    Case                           shift and go to state 99
    CaseList                       shift and go to state 121

state 112

    (51) Case -> OBJECTID : . TYPEID DARROW Expresion
    TYPEID          shift and go to state 122


state 113

    (24) Expresion -> LET OBJECTID : TYPEID exprOpcional . lstArrow IN Expresion
    (47) lstArrow -> .
    (48) lstArrow -> . , OBJECTID : TYPEID exprOpcional lstArrow
    IN              reduce using rule 47 (lstArrow -> .)
    ,               shift and go to state 124

    lstArrow                       shift and go to state 123

state 114

    (50) exprOpcional -> ASSIGN . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 125

state 115

    (25) Expresion -> WHILE Expresion LOOP Expresion POOL .
    .               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    @               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    =               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    DARROW          reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LE              reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    /               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    *               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    -               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    +               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ;               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OF              reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LOOP            reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    THEN            reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    )               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    }               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    POOL            reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ELSE            reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ,               reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    IN              reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    FI              reduce using rule 25 (Expresion -> WHILE Expresion LOOP Expresion POOL .)


state 116

    (26) Expresion -> IF Expresion THEN Expresion ELSE . Expresion FI
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 126

state 117

    (12) Metodo -> OBJECTID ( Formal , ListFormal ) : TYPEID { . Expresion }
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 127

state 118

    (46) lstExpr -> Expresion , . lstExpr
    (45) lstExpr -> . Expresion
    (46) lstExpr -> . Expresion , lstExpr
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 106
    lstExpr                        shift and go to state 128

state 119

    (27) Expresion -> Expresion . OBJECTID ( lstExpr ) .
    .               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    @               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    =               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    DARROW          reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    LE              reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    /               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    *               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    -               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    +               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    ;               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    OF              reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    LOOP            reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    THEN            reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    )               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    }               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    POOL            reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    ELSE            reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    ,               reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    IN              reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)
    FI              reduce using rule 27 (Expresion -> Expresion . OBJECTID ( lstExpr ) .)


state 120

    (29) Expresion -> Expresion @ TYPEID . OBJECTID ( . lstExpr )
    (30) Expresion -> Expresion @ TYPEID . OBJECTID ( . )
    (45) lstExpr -> . Expresion
    (46) lstExpr -> . Expresion , lstExpr
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    )               shift and go to state 130
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 106
    lstExpr                        shift and go to state 129

state 121

    (53) CaseList -> Case ; CaseList .
    ESAC            reduce using rule 53 (CaseList -> Case ; CaseList .)


state 122

    (51) Case -> OBJECTID : TYPEID . DARROW Expresion
    DARROW          shift and go to state 131


state 123

    (24) Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow . IN Expresion
    IN              shift and go to state 132


state 124

    (48) lstArrow -> , . OBJECTID : TYPEID exprOpcional lstArrow
    OBJECTID        shift and go to state 133


state 125

    (50) exprOpcional -> ASSIGN Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    ,               reduce using rule 50 (exprOpcional -> ASSIGN Expresion .)
    IN              reduce using rule 50 (exprOpcional -> ASSIGN Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 126

    (26) Expresion -> IF Expresion THEN Expresion ELSE Expresion . FI
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    FI              shift and go to state 134
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 127

    (12) Metodo -> OBJECTID ( Formal , ListFormal ) : TYPEID { Expresion . }
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    }               shift and go to state 135
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 128

    (46) lstExpr -> Expresion , lstExpr .
    )               reduce using rule 46 (lstExpr -> Expresion , lstExpr .)


state 129

    (29) Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr . )
    )               shift and go to state 136


state 130

    (30) Expresion -> Expresion @ TYPEID . OBJECTID ( ) .
    .               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    DARROW          reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)


state 131

    (51) Case -> OBJECTID : TYPEID DARROW . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 137

state 132

    (24) Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { listNueva }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF CaseList ESAC
    (24) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (25) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (26) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (27) Expresion -> . Expresion . OBJECTID ( lstExpr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (31) Expresion -> . ~ Expresion
    (32) Expresion -> . ISVOID Expresion
    (33) Expresion -> . NOT Expresion
    (34) Expresion -> . ( Expresion )
    (35) Expresion -> . Expresion = Expresion
    (36) Expresion -> . Expresion DARROW Expresion
    (37) Expresion -> . Expresion LE Expresion
    (38) Expresion -> . Expresion / Expresion
    (39) Expresion -> . Expresion * Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . NUMBER
    (42) Expresion -> . Expresion + Expresion
    (43) Expresion -> . IGNORE
    (44) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    CASE            shift and go to state 37
    LET             shift and go to state 38
    WHILE           shift and go to state 39
    IF              shift and go to state 40
    ~               shift and go to state 42
    ISVOID          shift and go to state 43
    NOT             shift and go to state 44
    (               shift and go to state 41
    NUMBER          shift and go to state 45
    IGNORE          shift and go to state 46

    Expresion                      shift and go to state 138

state 133

    (48) lstArrow -> , OBJECTID . : TYPEID exprOpcional lstArrow
    :               shift and go to state 139


state 134

    (26) Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .
    .               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    @               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    =               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    DARROW          reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LE              reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    /               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    *               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    -               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    +               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ;               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OF              reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LOOP            reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    THEN            reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    )               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    }               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    POOL            reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ELSE            reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ,               reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    IN              reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    FI              reduce using rule 26 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)


state 135

    (12) Metodo -> OBJECTID ( Formal , ListFormal ) : TYPEID { Expresion } .
    ;               reduce using rule 12 (Metodo -> OBJECTID ( Formal , ListFormal ) : TYPEID { Expresion } .)


state 136

    (29) Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .
    .               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    @               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    =               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    DARROW          reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    LE              reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    /               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    *               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    -               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    +               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    ;               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    OF              reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    LOOP            reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    THEN            reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    )               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    }               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    POOL            reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    ELSE            reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    ,               reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    IN              reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)
    FI              reduce using rule 29 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr ) .)


state 137

    (51) Case -> OBJECTID : TYPEID DARROW Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
    ;               reduce using rule 51 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 138

    (24) Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .
    (27) Expresion -> Expresion . . OBJECTID ( lstExpr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (35) Expresion -> Expresion . = Expresion
    (36) Expresion -> Expresion . DARROW Expresion
    (37) Expresion -> Expresion . LE Expresion
    (38) Expresion -> Expresion . / Expresion
    (39) Expresion -> Expresion . * Expresion
    (40) Expresion -> Expresion . - Expresion
    (42) Expresion -> Expresion . + Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
    ;               reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    OF              reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    LOOP            reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    THEN            reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    )               reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    }               reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    POOL            reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    ELSE            reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    ,               reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    IN              reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    FI              reduce using rule 24 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    .               shift and go to state 52
    @               shift and go to state 53
    =               shift and go to state 54
    DARROW          shift and go to state 55
    LE              shift and go to state 56
    /               shift and go to state 57
    *               shift and go to state 58
    -               shift and go to state 59
    +               shift and go to state 60


state 139

    (48) lstArrow -> , OBJECTID : . TYPEID exprOpcional lstArrow
    TYPEID          shift and go to state 140


state 140

    (48) lstArrow -> , OBJECTID : TYPEID . exprOpcional lstArrow
    (49) exprOpcional -> .
    (50) exprOpcional -> . ASSIGN Expresion
    ,               reduce using rule 49 (exprOpcional -> .)
    IN              reduce using rule 49 (exprOpcional -> .)
    ASSIGN          shift and go to state 114

    exprOpcional                   shift and go to state 141

state 141

    (48) lstArrow -> , OBJECTID : TYPEID exprOpcional . lstArrow
    (47) lstArrow -> .
    (48) lstArrow -> . , OBJECTID : TYPEID exprOpcional lstArrow
    IN              reduce using rule 47 (lstArrow -> .)
    ,               shift and go to state 124

    lstArrow                       shift and go to state 142

state 142

    (48) lstArrow -> , OBJECTID : TYPEID exprOpcional lstArrow .
    IN              reduce using rule 48 (lstArrow -> , OBJECTID : TYPEID exprOpcional lstArrow .)


Conflicts:

shift/reduce conflict for . in state 69 resolved as shift
shift/reduce conflict for @ in state 69 resolved as shift
shift/reduce conflict for = in state 69 resolved as shift
shift/reduce conflict for DARROW in state 69 resolved as shift
shift/reduce conflict for LE in state 69 resolved as shift
shift/reduce conflict for / in state 69 resolved as shift
shift/reduce conflict for * in state 69 resolved as shift
shift/reduce conflict for - in state 69 resolved as shift
shift/reduce conflict for + in state 69 resolved as shift
shift/reduce conflict for . in state 78 resolved as shift
shift/reduce conflict for @ in state 78 resolved as shift
shift/reduce conflict for = in state 78 resolved as shift
shift/reduce conflict for DARROW in state 78 resolved as shift
shift/reduce conflict for LE in state 78 resolved as shift
shift/reduce conflict for / in state 78 resolved as shift
shift/reduce conflict for * in state 78 resolved as shift
shift/reduce conflict for - in state 78 resolved as shift
shift/reduce conflict for + in state 78 resolved as shift
shift/reduce conflict for . in state 138 resolved as shift
shift/reduce conflict for @ in state 138 resolved as shift
shift/reduce conflict for = in state 138 resolved as shift
shift/reduce conflict for DARROW in state 138 resolved as shift
shift/reduce conflict for LE in state 138 resolved as shift
shift/reduce conflict for / in state 138 resolved as shift
shift/reduce conflict for * in state 138 resolved as shift
shift/reduce conflict for - in state 138 resolved as shift
shift/reduce conflict for + in state 138 resolved as shift