Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> Programa Clase
Rule 2     Programa -> Clase
Rule 3     Clase -> CLASS TYPEID opcional { lista_atr_metodos } ;
Rule 4     lista_atr_metodos -> Metodo ; lista_atr_metodos
Rule 5     lista_atr_metodos -> <empty>
Rule 6     lista_atr_metodos -> Atributo ; lista_atr_metodos
Rule 7     opcional -> INHERITS TYPEID
Rule 8     opcional -> <empty>
Rule 9     Atributo -> OBJECTID : TYPEID opcional_expr
Rule 10    opcional_expr -> <empty>
Rule 11    opcional_expr -> Expresion
Rule 12    Metodo -> OBJECTID ( Formal , Formal ) : TYPEID { Expresion } ;
Rule 13    Metodo -> OBJECTID ( ) : TYPEID { Expresion }
Rule 14    Formal -> OBJECTID : TYPEID
Rule 15    Expresion -> BOOL_CONST
Rule 16    Expresion -> STR_CONST
Rule 17    Expresion -> INT_CONST
Rule 18    Expresion -> OBJECTID
Rule 19    Expresion -> { listNueva }
Rule 20    Expresion -> NEW TYPEID
Rule 21    Expresion -> Case Expresion OF CaseList ; ESAC
Rule 22    Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
Rule 23    Expresion -> WHILE Expresion LOOP Expresion POOL
Rule 24    Expresion -> IF Expresion THEN Expresion ELSE Expresion FI
Rule 25    Expresion -> exprOpcional OBJECTID ( )
Rule 26    Expresion -> exprOpcional OBJECTID ( lstExpr Expresion )
Rule 27    Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
Rule 28    Expresion -> Expresion @ TYPEID . OBJECTID ( )
Rule 29    Expresion -> ~ Expresion
Rule 30    Expresion -> ISVOID Expresion  [precedence=left, level=5]
Rule 31    Expresion -> NOT Expresion  [precedence=nonassoc, level=2]
Rule 32    Expresion -> ( Expresion )
Rule 33    Expresion -> Expresion = Expresion
Rule 34    Expresion -> Expresion DARROW Expresion  [precedence=nonassoc, level=2]
Rule 35    Expresion -> Expresion LE Expresion  [precedence=nonassoc, level=2]
Rule 36    Expresion -> Expresion / Expresion  [precedence=left, level=4]
Rule 37    Expresion -> Expresion * Expresion  [precedence=left, level=4]
Rule 38    Expresion -> Expresion - Expresion  [precedence=left, level=3]
Rule 39    Expresion -> NUMBER
Rule 40    Expresion -> Expresion + Expresion  [precedence=left, level=3]
Rule 41    Expresion -> IGNORE
Rule 42    Expresion -> OBJECTID ASSIGN Expresion  [precedence=right, level=1]
Rule 43    lstExpr -> Expresion
Rule 44    lstExpr -> Expresion , lstExpr
Rule 45    lstArrow -> <empty>
Rule 46    lstArrow -> , OBJECTID : TYPEID exprOpcional lstArrow
Rule 47    exprOpcional -> Expresion .  [precedence=left, level=7]
Rule 48    exprOpcional -> <empty>
Rule 49    exprOpcional -> ASSIGN Expresion  [precedence=right, level=1]
Rule 50    Case -> OBJECTID : TYPEID DARROW Expresion  [precedence=nonassoc, level=2]
Rule 51    CaseList -> Case
Rule 52    CaseList -> Case CaseList
Rule 53    listNueva -> Expresion ;
Rule 54    listNueva -> Expresion ; listNueva

Unused terminals:

    CASE

Terminals, with rules where they appear:

(                    : 12 13 25 26 27 28 32
)                    : 12 13 25 26 27 28 32
*                    : 37
+                    : 40
,                    : 12 44 46
-                    : 38
.                    : 27 28 47
/                    : 36
:                    : 9 12 13 14 22 46 50
;                    : 3 4 6 12 21 53 54
=                    : 33
@                    : 27 28
ASSIGN               : 42 49
BOOL_CONST           : 15
CASE                 : 
CLASS                : 3
DARROW               : 34 50
ELSE                 : 24
ESAC                 : 21
FI                   : 24
IF                   : 24
IGNORE               : 41
IN                   : 22
INHERITS             : 7
INT_CONST            : 17
ISVOID               : 30
LE                   : 35
LET                  : 22
LOOP                 : 23
NEW                  : 20
NOT                  : 31
NUMBER               : 39
OBJECTID             : 9 12 13 14 18 22 25 26 27 28 42 46 50
OF                   : 21
POOL                 : 23
STR_CONST            : 16
THEN                 : 24
TYPEID               : 3 7 9 12 13 14 20 22 27 28 46 50
WHILE                : 23
error                : 
{                    : 3 12 13 19
}                    : 3 12 13 19
~                    : 29

Nonterminals, with rules where they appear:

Atributo             : 6
Case                 : 21 51 52
CaseList             : 21 52
Clase                : 1 2
Expresion            : 11 12 13 21 22 23 23 24 24 24 26 27 27 28 29 30 31 32 33 33 34 34 35 35 36 36 37 37 38 38 40 40 42 43 44 47 49 50 53 54
Formal               : 12 12
Metodo               : 4
Programa             : 1 0
exprOpcional         : 22 25 26 46
listNueva            : 19 54
lista_atr_metodos    : 3 4 6
lstArrow             : 22 46
lstExpr              : 26 27 44
opcional             : 3
opcional_expr        : 9


state 0

    (0) S' -> . Programa
    (1) Programa -> . Programa Clase
    (2) Programa -> . Clase
    (3) Clase -> . CLASS TYPEID opcional { lista_atr_metodos } ;
    CLASS           shift and go to state 3

    Programa                       shift and go to state 1
    Clase                          shift and go to state 2

state 1

    (0) S' -> Programa .
    (1) Programa -> Programa . Clase
    (3) Clase -> . CLASS TYPEID opcional { lista_atr_metodos } ;
    CLASS           shift and go to state 3

    Clase                          shift and go to state 4

state 2

    (2) Programa -> Clase .
    CLASS           reduce using rule 2 (Programa -> Clase .)
    $end            reduce using rule 2 (Programa -> Clase .)


state 3

    (3) Clase -> CLASS . TYPEID opcional { lista_atr_metodos } ;
    TYPEID          shift and go to state 5


state 4

    (1) Programa -> Programa Clase .
    CLASS           reduce using rule 1 (Programa -> Programa Clase .)
    $end            reduce using rule 1 (Programa -> Programa Clase .)


state 5

    (3) Clase -> CLASS TYPEID . opcional { lista_atr_metodos } ;
    (7) opcional -> . INHERITS TYPEID
    (8) opcional -> .
    INHERITS        shift and go to state 7
    {               reduce using rule 8 (opcional -> .)

    opcional                       shift and go to state 6

state 6

    (3) Clase -> CLASS TYPEID opcional . { lista_atr_metodos } ;
    {               shift and go to state 8


state 7

    (7) opcional -> INHERITS . TYPEID
    TYPEID          shift and go to state 9


state 8

    (3) Clase -> CLASS TYPEID opcional { . lista_atr_metodos } ;
    (4) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (5) lista_atr_metodos -> .
    (6) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (12) Metodo -> . OBJECTID ( Formal , Formal ) : TYPEID { Expresion } ;
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 5 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    lista_atr_metodos              shift and go to state 10
    Metodo                         shift and go to state 11
    Atributo                       shift and go to state 12

state 9

    (7) opcional -> INHERITS TYPEID .
    {               reduce using rule 7 (opcional -> INHERITS TYPEID .)


state 10

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos . } ;
    }               shift and go to state 14


state 11

    (4) lista_atr_metodos -> Metodo . ; lista_atr_metodos
    ;               shift and go to state 15


state 12

    (6) lista_atr_metodos -> Atributo . ; lista_atr_metodos
    ;               shift and go to state 16


state 13

    (12) Metodo -> OBJECTID . ( Formal , Formal ) : TYPEID { Expresion } ;
    (13) Metodo -> OBJECTID . ( ) : TYPEID { Expresion }
    (9) Atributo -> OBJECTID . : TYPEID opcional_expr
    (               shift and go to state 17
    :               shift and go to state 18


state 14

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos } . ;
    ;               shift and go to state 19


state 15

    (4) lista_atr_metodos -> Metodo ; . lista_atr_metodos
    (4) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (5) lista_atr_metodos -> .
    (6) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (12) Metodo -> . OBJECTID ( Formal , Formal ) : TYPEID { Expresion } ;
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 5 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    Metodo                         shift and go to state 11
    lista_atr_metodos              shift and go to state 20
    Atributo                       shift and go to state 12

state 16

    (6) lista_atr_metodos -> Atributo ; . lista_atr_metodos
    (4) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (5) lista_atr_metodos -> .
    (6) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (12) Metodo -> . OBJECTID ( Formal , Formal ) : TYPEID { Expresion } ;
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 5 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 13

    Atributo                       shift and go to state 12
    lista_atr_metodos              shift and go to state 21
    Metodo                         shift and go to state 11

state 17

    (12) Metodo -> OBJECTID ( . Formal , Formal ) : TYPEID { Expresion } ;
    (13) Metodo -> OBJECTID ( . ) : TYPEID { Expresion }
    (14) Formal -> . OBJECTID : TYPEID
    )               shift and go to state 24
    OBJECTID        shift and go to state 22

    Formal                         shift and go to state 23

state 18

    (9) Atributo -> OBJECTID : . TYPEID opcional_expr
    TYPEID          shift and go to state 25


state 19

    (3) Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .
    CLASS           reduce using rule 3 (Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .)
    $end            reduce using rule 3 (Clase -> CLASS TYPEID opcional { lista_atr_metodos } ; .)


state 20

    (4) lista_atr_metodos -> Metodo ; lista_atr_metodos .
    }               reduce using rule 4 (lista_atr_metodos -> Metodo ; lista_atr_metodos .)


state 21

    (6) lista_atr_metodos -> Atributo ; lista_atr_metodos .
    }               reduce using rule 6 (lista_atr_metodos -> Atributo ; lista_atr_metodos .)


state 22

    (14) Formal -> OBJECTID . : TYPEID
    :               shift and go to state 26


state 23

    (12) Metodo -> OBJECTID ( Formal . , Formal ) : TYPEID { Expresion } ;
    ,               shift and go to state 27


state 24

    (13) Metodo -> OBJECTID ( ) . : TYPEID { Expresion }
    :               shift and go to state 28


state 25

    (9) Atributo -> OBJECTID : TYPEID . opcional_expr
    (10) opcional_expr -> .
    (11) opcional_expr -> . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    ;               reduce using rule 10 (opcional_expr -> .)
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    opcional_expr                  shift and go to state 30
    Expresion                      shift and go to state 31
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 26

    (14) Formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 49


state 27

    (12) Metodo -> OBJECTID ( Formal , . Formal ) : TYPEID { Expresion } ;
    (14) Formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 22

    Formal                         shift and go to state 50

state 28

    (13) Metodo -> OBJECTID ( ) : . TYPEID { Expresion }
    TYPEID          shift and go to state 51


state 29

    (18) Expresion -> OBJECTID .
    (42) Expresion -> OBJECTID . ASSIGN Expresion
    (50) Case -> OBJECTID . : TYPEID DARROW Expresion
  ! shift/reduce conflict for ASSIGN resolved as shift
    @               reduce using rule 18 (Expresion -> OBJECTID .)
    =               reduce using rule 18 (Expresion -> OBJECTID .)
    DARROW          reduce using rule 18 (Expresion -> OBJECTID .)
    LE              reduce using rule 18 (Expresion -> OBJECTID .)
    /               reduce using rule 18 (Expresion -> OBJECTID .)
    *               reduce using rule 18 (Expresion -> OBJECTID .)
    -               reduce using rule 18 (Expresion -> OBJECTID .)
    +               reduce using rule 18 (Expresion -> OBJECTID .)
    .               reduce using rule 18 (Expresion -> OBJECTID .)
    ;               reduce using rule 18 (Expresion -> OBJECTID .)
    OF              reduce using rule 18 (Expresion -> OBJECTID .)
    LOOP            reduce using rule 18 (Expresion -> OBJECTID .)
    THEN            reduce using rule 18 (Expresion -> OBJECTID .)
    )               reduce using rule 18 (Expresion -> OBJECTID .)
    OBJECTID        reduce using rule 18 (Expresion -> OBJECTID .)
    ,               reduce using rule 18 (Expresion -> OBJECTID .)
    IN              reduce using rule 18 (Expresion -> OBJECTID .)
    }               reduce using rule 18 (Expresion -> OBJECTID .)
    BOOL_CONST      reduce using rule 18 (Expresion -> OBJECTID .)
    STR_CONST       reduce using rule 18 (Expresion -> OBJECTID .)
    INT_CONST       reduce using rule 18 (Expresion -> OBJECTID .)
    {               reduce using rule 18 (Expresion -> OBJECTID .)
    NEW             reduce using rule 18 (Expresion -> OBJECTID .)
    LET             reduce using rule 18 (Expresion -> OBJECTID .)
    WHILE           reduce using rule 18 (Expresion -> OBJECTID .)
    IF              reduce using rule 18 (Expresion -> OBJECTID .)
    ~               reduce using rule 18 (Expresion -> OBJECTID .)
    ISVOID          reduce using rule 18 (Expresion -> OBJECTID .)
    NOT             reduce using rule 18 (Expresion -> OBJECTID .)
    (               reduce using rule 18 (Expresion -> OBJECTID .)
    NUMBER          reduce using rule 18 (Expresion -> OBJECTID .)
    IGNORE          reduce using rule 18 (Expresion -> OBJECTID .)
    POOL            reduce using rule 18 (Expresion -> OBJECTID .)
    ELSE            reduce using rule 18 (Expresion -> OBJECTID .)
    FI              reduce using rule 18 (Expresion -> OBJECTID .)
    ASSIGN          shift and go to state 52
    :               shift and go to state 53


state 30

    (9) Atributo -> OBJECTID : TYPEID opcional_expr .
    ;               reduce using rule 9 (Atributo -> OBJECTID : TYPEID opcional_expr .)


state 31

    (11) opcional_expr -> Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    ;               reduce using rule 11 (opcional_expr -> Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 32

    (15) Expresion -> BOOL_CONST .
    @               reduce using rule 15 (Expresion -> BOOL_CONST .)
    =               reduce using rule 15 (Expresion -> BOOL_CONST .)
    DARROW          reduce using rule 15 (Expresion -> BOOL_CONST .)
    LE              reduce using rule 15 (Expresion -> BOOL_CONST .)
    /               reduce using rule 15 (Expresion -> BOOL_CONST .)
    *               reduce using rule 15 (Expresion -> BOOL_CONST .)
    -               reduce using rule 15 (Expresion -> BOOL_CONST .)
    +               reduce using rule 15 (Expresion -> BOOL_CONST .)
    .               reduce using rule 15 (Expresion -> BOOL_CONST .)
    ;               reduce using rule 15 (Expresion -> BOOL_CONST .)
    OF              reduce using rule 15 (Expresion -> BOOL_CONST .)
    LOOP            reduce using rule 15 (Expresion -> BOOL_CONST .)
    THEN            reduce using rule 15 (Expresion -> BOOL_CONST .)
    )               reduce using rule 15 (Expresion -> BOOL_CONST .)
    OBJECTID        reduce using rule 15 (Expresion -> BOOL_CONST .)
    ,               reduce using rule 15 (Expresion -> BOOL_CONST .)
    IN              reduce using rule 15 (Expresion -> BOOL_CONST .)
    }               reduce using rule 15 (Expresion -> BOOL_CONST .)
    BOOL_CONST      reduce using rule 15 (Expresion -> BOOL_CONST .)
    STR_CONST       reduce using rule 15 (Expresion -> BOOL_CONST .)
    INT_CONST       reduce using rule 15 (Expresion -> BOOL_CONST .)
    {               reduce using rule 15 (Expresion -> BOOL_CONST .)
    NEW             reduce using rule 15 (Expresion -> BOOL_CONST .)
    LET             reduce using rule 15 (Expresion -> BOOL_CONST .)
    WHILE           reduce using rule 15 (Expresion -> BOOL_CONST .)
    IF              reduce using rule 15 (Expresion -> BOOL_CONST .)
    ~               reduce using rule 15 (Expresion -> BOOL_CONST .)
    ISVOID          reduce using rule 15 (Expresion -> BOOL_CONST .)
    NOT             reduce using rule 15 (Expresion -> BOOL_CONST .)
    (               reduce using rule 15 (Expresion -> BOOL_CONST .)
    NUMBER          reduce using rule 15 (Expresion -> BOOL_CONST .)
    IGNORE          reduce using rule 15 (Expresion -> BOOL_CONST .)
    ASSIGN          reduce using rule 15 (Expresion -> BOOL_CONST .)
    POOL            reduce using rule 15 (Expresion -> BOOL_CONST .)
    ELSE            reduce using rule 15 (Expresion -> BOOL_CONST .)
    FI              reduce using rule 15 (Expresion -> BOOL_CONST .)


state 33

    (16) Expresion -> STR_CONST .
    @               reduce using rule 16 (Expresion -> STR_CONST .)
    =               reduce using rule 16 (Expresion -> STR_CONST .)
    DARROW          reduce using rule 16 (Expresion -> STR_CONST .)
    LE              reduce using rule 16 (Expresion -> STR_CONST .)
    /               reduce using rule 16 (Expresion -> STR_CONST .)
    *               reduce using rule 16 (Expresion -> STR_CONST .)
    -               reduce using rule 16 (Expresion -> STR_CONST .)
    +               reduce using rule 16 (Expresion -> STR_CONST .)
    .               reduce using rule 16 (Expresion -> STR_CONST .)
    ;               reduce using rule 16 (Expresion -> STR_CONST .)
    OF              reduce using rule 16 (Expresion -> STR_CONST .)
    LOOP            reduce using rule 16 (Expresion -> STR_CONST .)
    THEN            reduce using rule 16 (Expresion -> STR_CONST .)
    )               reduce using rule 16 (Expresion -> STR_CONST .)
    OBJECTID        reduce using rule 16 (Expresion -> STR_CONST .)
    ,               reduce using rule 16 (Expresion -> STR_CONST .)
    IN              reduce using rule 16 (Expresion -> STR_CONST .)
    }               reduce using rule 16 (Expresion -> STR_CONST .)
    BOOL_CONST      reduce using rule 16 (Expresion -> STR_CONST .)
    STR_CONST       reduce using rule 16 (Expresion -> STR_CONST .)
    INT_CONST       reduce using rule 16 (Expresion -> STR_CONST .)
    {               reduce using rule 16 (Expresion -> STR_CONST .)
    NEW             reduce using rule 16 (Expresion -> STR_CONST .)
    LET             reduce using rule 16 (Expresion -> STR_CONST .)
    WHILE           reduce using rule 16 (Expresion -> STR_CONST .)
    IF              reduce using rule 16 (Expresion -> STR_CONST .)
    ~               reduce using rule 16 (Expresion -> STR_CONST .)
    ISVOID          reduce using rule 16 (Expresion -> STR_CONST .)
    NOT             reduce using rule 16 (Expresion -> STR_CONST .)
    (               reduce using rule 16 (Expresion -> STR_CONST .)
    NUMBER          reduce using rule 16 (Expresion -> STR_CONST .)
    IGNORE          reduce using rule 16 (Expresion -> STR_CONST .)
    ASSIGN          reduce using rule 16 (Expresion -> STR_CONST .)
    POOL            reduce using rule 16 (Expresion -> STR_CONST .)
    ELSE            reduce using rule 16 (Expresion -> STR_CONST .)
    FI              reduce using rule 16 (Expresion -> STR_CONST .)


state 34

    (17) Expresion -> INT_CONST .
    @               reduce using rule 17 (Expresion -> INT_CONST .)
    =               reduce using rule 17 (Expresion -> INT_CONST .)
    DARROW          reduce using rule 17 (Expresion -> INT_CONST .)
    LE              reduce using rule 17 (Expresion -> INT_CONST .)
    /               reduce using rule 17 (Expresion -> INT_CONST .)
    *               reduce using rule 17 (Expresion -> INT_CONST .)
    -               reduce using rule 17 (Expresion -> INT_CONST .)
    +               reduce using rule 17 (Expresion -> INT_CONST .)
    .               reduce using rule 17 (Expresion -> INT_CONST .)
    ;               reduce using rule 17 (Expresion -> INT_CONST .)
    OF              reduce using rule 17 (Expresion -> INT_CONST .)
    LOOP            reduce using rule 17 (Expresion -> INT_CONST .)
    THEN            reduce using rule 17 (Expresion -> INT_CONST .)
    )               reduce using rule 17 (Expresion -> INT_CONST .)
    OBJECTID        reduce using rule 17 (Expresion -> INT_CONST .)
    ,               reduce using rule 17 (Expresion -> INT_CONST .)
    IN              reduce using rule 17 (Expresion -> INT_CONST .)
    }               reduce using rule 17 (Expresion -> INT_CONST .)
    BOOL_CONST      reduce using rule 17 (Expresion -> INT_CONST .)
    STR_CONST       reduce using rule 17 (Expresion -> INT_CONST .)
    INT_CONST       reduce using rule 17 (Expresion -> INT_CONST .)
    {               reduce using rule 17 (Expresion -> INT_CONST .)
    NEW             reduce using rule 17 (Expresion -> INT_CONST .)
    LET             reduce using rule 17 (Expresion -> INT_CONST .)
    WHILE           reduce using rule 17 (Expresion -> INT_CONST .)
    IF              reduce using rule 17 (Expresion -> INT_CONST .)
    ~               reduce using rule 17 (Expresion -> INT_CONST .)
    ISVOID          reduce using rule 17 (Expresion -> INT_CONST .)
    NOT             reduce using rule 17 (Expresion -> INT_CONST .)
    (               reduce using rule 17 (Expresion -> INT_CONST .)
    NUMBER          reduce using rule 17 (Expresion -> INT_CONST .)
    IGNORE          reduce using rule 17 (Expresion -> INT_CONST .)
    ASSIGN          reduce using rule 17 (Expresion -> INT_CONST .)
    POOL            reduce using rule 17 (Expresion -> INT_CONST .)
    ELSE            reduce using rule 17 (Expresion -> INT_CONST .)
    FI              reduce using rule 17 (Expresion -> INT_CONST .)


state 35

    (19) Expresion -> { . listNueva }
    (53) listNueva -> . Expresion ;
    (54) listNueva -> . Expresion ; listNueva
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    listNueva                      shift and go to state 63
    Expresion                      shift and go to state 64
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 36

    (20) Expresion -> NEW . TYPEID
    TYPEID          shift and go to state 65


state 37

    (21) Expresion -> Case . Expresion OF CaseList ; ESAC
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Case                           shift and go to state 37
    Expresion                      shift and go to state 66
    exprOpcional                   shift and go to state 39

state 38

    (22) Expresion -> LET . OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    OBJECTID        shift and go to state 67


state 39

    (25) Expresion -> exprOpcional . OBJECTID ( )
    (26) Expresion -> exprOpcional . OBJECTID ( lstExpr Expresion )
    OBJECTID        shift and go to state 68


state 40

    (23) Expresion -> WHILE . Expresion LOOP Expresion POOL
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 69
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 41

    (24) Expresion -> IF . Expresion THEN Expresion ELSE Expresion FI
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 70
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 42

    (32) Expresion -> ( . Expresion )
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 71
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 43

    (29) Expresion -> ~ . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 72
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 44

    (30) Expresion -> ISVOID . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 73
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 45

    (31) Expresion -> NOT . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 74
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 46

    (39) Expresion -> NUMBER .
    @               reduce using rule 39 (Expresion -> NUMBER .)
    =               reduce using rule 39 (Expresion -> NUMBER .)
    DARROW          reduce using rule 39 (Expresion -> NUMBER .)
    LE              reduce using rule 39 (Expresion -> NUMBER .)
    /               reduce using rule 39 (Expresion -> NUMBER .)
    *               reduce using rule 39 (Expresion -> NUMBER .)
    -               reduce using rule 39 (Expresion -> NUMBER .)
    +               reduce using rule 39 (Expresion -> NUMBER .)
    .               reduce using rule 39 (Expresion -> NUMBER .)
    ;               reduce using rule 39 (Expresion -> NUMBER .)
    OF              reduce using rule 39 (Expresion -> NUMBER .)
    LOOP            reduce using rule 39 (Expresion -> NUMBER .)
    THEN            reduce using rule 39 (Expresion -> NUMBER .)
    )               reduce using rule 39 (Expresion -> NUMBER .)
    OBJECTID        reduce using rule 39 (Expresion -> NUMBER .)
    ,               reduce using rule 39 (Expresion -> NUMBER .)
    IN              reduce using rule 39 (Expresion -> NUMBER .)
    }               reduce using rule 39 (Expresion -> NUMBER .)
    BOOL_CONST      reduce using rule 39 (Expresion -> NUMBER .)
    STR_CONST       reduce using rule 39 (Expresion -> NUMBER .)
    INT_CONST       reduce using rule 39 (Expresion -> NUMBER .)
    {               reduce using rule 39 (Expresion -> NUMBER .)
    NEW             reduce using rule 39 (Expresion -> NUMBER .)
    LET             reduce using rule 39 (Expresion -> NUMBER .)
    WHILE           reduce using rule 39 (Expresion -> NUMBER .)
    IF              reduce using rule 39 (Expresion -> NUMBER .)
    ~               reduce using rule 39 (Expresion -> NUMBER .)
    ISVOID          reduce using rule 39 (Expresion -> NUMBER .)
    NOT             reduce using rule 39 (Expresion -> NUMBER .)
    (               reduce using rule 39 (Expresion -> NUMBER .)
    NUMBER          reduce using rule 39 (Expresion -> NUMBER .)
    IGNORE          reduce using rule 39 (Expresion -> NUMBER .)
    ASSIGN          reduce using rule 39 (Expresion -> NUMBER .)
    POOL            reduce using rule 39 (Expresion -> NUMBER .)
    ELSE            reduce using rule 39 (Expresion -> NUMBER .)
    FI              reduce using rule 39 (Expresion -> NUMBER .)


state 47

    (41) Expresion -> IGNORE .
    @               reduce using rule 41 (Expresion -> IGNORE .)
    =               reduce using rule 41 (Expresion -> IGNORE .)
    DARROW          reduce using rule 41 (Expresion -> IGNORE .)
    LE              reduce using rule 41 (Expresion -> IGNORE .)
    /               reduce using rule 41 (Expresion -> IGNORE .)
    *               reduce using rule 41 (Expresion -> IGNORE .)
    -               reduce using rule 41 (Expresion -> IGNORE .)
    +               reduce using rule 41 (Expresion -> IGNORE .)
    .               reduce using rule 41 (Expresion -> IGNORE .)
    ;               reduce using rule 41 (Expresion -> IGNORE .)
    OF              reduce using rule 41 (Expresion -> IGNORE .)
    LOOP            reduce using rule 41 (Expresion -> IGNORE .)
    THEN            reduce using rule 41 (Expresion -> IGNORE .)
    )               reduce using rule 41 (Expresion -> IGNORE .)
    OBJECTID        reduce using rule 41 (Expresion -> IGNORE .)
    ,               reduce using rule 41 (Expresion -> IGNORE .)
    IN              reduce using rule 41 (Expresion -> IGNORE .)
    }               reduce using rule 41 (Expresion -> IGNORE .)
    BOOL_CONST      reduce using rule 41 (Expresion -> IGNORE .)
    STR_CONST       reduce using rule 41 (Expresion -> IGNORE .)
    INT_CONST       reduce using rule 41 (Expresion -> IGNORE .)
    {               reduce using rule 41 (Expresion -> IGNORE .)
    NEW             reduce using rule 41 (Expresion -> IGNORE .)
    LET             reduce using rule 41 (Expresion -> IGNORE .)
    WHILE           reduce using rule 41 (Expresion -> IGNORE .)
    IF              reduce using rule 41 (Expresion -> IGNORE .)
    ~               reduce using rule 41 (Expresion -> IGNORE .)
    ISVOID          reduce using rule 41 (Expresion -> IGNORE .)
    NOT             reduce using rule 41 (Expresion -> IGNORE .)
    (               reduce using rule 41 (Expresion -> IGNORE .)
    NUMBER          reduce using rule 41 (Expresion -> IGNORE .)
    IGNORE          reduce using rule 41 (Expresion -> IGNORE .)
    ASSIGN          reduce using rule 41 (Expresion -> IGNORE .)
    POOL            reduce using rule 41 (Expresion -> IGNORE .)
    ELSE            reduce using rule 41 (Expresion -> IGNORE .)
    FI              reduce using rule 41 (Expresion -> IGNORE .)


state 48

    (49) exprOpcional -> ASSIGN . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 75
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 49

    (14) Formal -> OBJECTID : TYPEID .
    ,               reduce using rule 14 (Formal -> OBJECTID : TYPEID .)
    )               reduce using rule 14 (Formal -> OBJECTID : TYPEID .)


state 50

    (12) Metodo -> OBJECTID ( Formal , Formal . ) : TYPEID { Expresion } ;
    )               shift and go to state 76


state 51

    (13) Metodo -> OBJECTID ( ) : TYPEID . { Expresion }
    {               shift and go to state 77


state 52

    (42) Expresion -> OBJECTID ASSIGN . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 78
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 53

    (50) Case -> OBJECTID : . TYPEID DARROW Expresion
    TYPEID          shift and go to state 79


state 54

    (27) Expresion -> Expresion @ . TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 80


state 55

    (47) exprOpcional -> Expresion . .
    OBJECTID        reduce using rule 47 (exprOpcional -> Expresion . .)
    ,               reduce using rule 47 (exprOpcional -> Expresion . .)
    IN              reduce using rule 47 (exprOpcional -> Expresion . .)


state 56

    (33) Expresion -> Expresion = . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 81
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 57

    (34) Expresion -> Expresion DARROW . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 82
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 58

    (35) Expresion -> Expresion LE . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 83
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 59

    (36) Expresion -> Expresion / . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 84
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 60

    (37) Expresion -> Expresion * . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 85
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 61

    (38) Expresion -> Expresion - . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 86
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 62

    (40) Expresion -> Expresion + . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 87
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 63

    (19) Expresion -> { listNueva . }
    }               shift and go to state 88


state 64

    (53) listNueva -> Expresion . ;
    (54) listNueva -> Expresion . ; listNueva
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    ;               shift and go to state 89
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 65

    (20) Expresion -> NEW TYPEID .
    @               reduce using rule 20 (Expresion -> NEW TYPEID .)
    =               reduce using rule 20 (Expresion -> NEW TYPEID .)
    DARROW          reduce using rule 20 (Expresion -> NEW TYPEID .)
    LE              reduce using rule 20 (Expresion -> NEW TYPEID .)
    /               reduce using rule 20 (Expresion -> NEW TYPEID .)
    *               reduce using rule 20 (Expresion -> NEW TYPEID .)
    -               reduce using rule 20 (Expresion -> NEW TYPEID .)
    +               reduce using rule 20 (Expresion -> NEW TYPEID .)
    .               reduce using rule 20 (Expresion -> NEW TYPEID .)
    ;               reduce using rule 20 (Expresion -> NEW TYPEID .)
    OF              reduce using rule 20 (Expresion -> NEW TYPEID .)
    LOOP            reduce using rule 20 (Expresion -> NEW TYPEID .)
    THEN            reduce using rule 20 (Expresion -> NEW TYPEID .)
    )               reduce using rule 20 (Expresion -> NEW TYPEID .)
    OBJECTID        reduce using rule 20 (Expresion -> NEW TYPEID .)
    ,               reduce using rule 20 (Expresion -> NEW TYPEID .)
    IN              reduce using rule 20 (Expresion -> NEW TYPEID .)
    }               reduce using rule 20 (Expresion -> NEW TYPEID .)
    BOOL_CONST      reduce using rule 20 (Expresion -> NEW TYPEID .)
    STR_CONST       reduce using rule 20 (Expresion -> NEW TYPEID .)
    INT_CONST       reduce using rule 20 (Expresion -> NEW TYPEID .)
    {               reduce using rule 20 (Expresion -> NEW TYPEID .)
    NEW             reduce using rule 20 (Expresion -> NEW TYPEID .)
    LET             reduce using rule 20 (Expresion -> NEW TYPEID .)
    WHILE           reduce using rule 20 (Expresion -> NEW TYPEID .)
    IF              reduce using rule 20 (Expresion -> NEW TYPEID .)
    ~               reduce using rule 20 (Expresion -> NEW TYPEID .)
    ISVOID          reduce using rule 20 (Expresion -> NEW TYPEID .)
    NOT             reduce using rule 20 (Expresion -> NEW TYPEID .)
    (               reduce using rule 20 (Expresion -> NEW TYPEID .)
    NUMBER          reduce using rule 20 (Expresion -> NEW TYPEID .)
    IGNORE          reduce using rule 20 (Expresion -> NEW TYPEID .)
    ASSIGN          reduce using rule 20 (Expresion -> NEW TYPEID .)
    POOL            reduce using rule 20 (Expresion -> NEW TYPEID .)
    ELSE            reduce using rule 20 (Expresion -> NEW TYPEID .)
    FI              reduce using rule 20 (Expresion -> NEW TYPEID .)


state 66

    (21) Expresion -> Case Expresion . OF CaseList ; ESAC
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    OF              shift and go to state 90
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 67

    (22) Expresion -> LET OBJECTID . : TYPEID exprOpcional lstArrow IN Expresion
    :               shift and go to state 91


state 68

    (25) Expresion -> exprOpcional OBJECTID . ( )
    (26) Expresion -> exprOpcional OBJECTID . ( lstExpr Expresion )
    (               shift and go to state 92


state 69

    (23) Expresion -> WHILE Expresion . LOOP Expresion POOL
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    LOOP            shift and go to state 93
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 70

    (24) Expresion -> IF Expresion . THEN Expresion ELSE Expresion FI
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    THEN            shift and go to state 94
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 71

    (32) Expresion -> ( Expresion . )
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    )               shift and go to state 95
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 72

    (29) Expresion -> ~ Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 29 (Expresion -> ~ Expresion .)
    OF              reduce using rule 29 (Expresion -> ~ Expresion .)
    LOOP            reduce using rule 29 (Expresion -> ~ Expresion .)
    THEN            reduce using rule 29 (Expresion -> ~ Expresion .)
    )               reduce using rule 29 (Expresion -> ~ Expresion .)
    OBJECTID        reduce using rule 29 (Expresion -> ~ Expresion .)
    ,               reduce using rule 29 (Expresion -> ~ Expresion .)
    IN              reduce using rule 29 (Expresion -> ~ Expresion .)
    }               reduce using rule 29 (Expresion -> ~ Expresion .)
    BOOL_CONST      reduce using rule 29 (Expresion -> ~ Expresion .)
    STR_CONST       reduce using rule 29 (Expresion -> ~ Expresion .)
    INT_CONST       reduce using rule 29 (Expresion -> ~ Expresion .)
    {               reduce using rule 29 (Expresion -> ~ Expresion .)
    NEW             reduce using rule 29 (Expresion -> ~ Expresion .)
    LET             reduce using rule 29 (Expresion -> ~ Expresion .)
    WHILE           reduce using rule 29 (Expresion -> ~ Expresion .)
    IF              reduce using rule 29 (Expresion -> ~ Expresion .)
    ~               reduce using rule 29 (Expresion -> ~ Expresion .)
    ISVOID          reduce using rule 29 (Expresion -> ~ Expresion .)
    NOT             reduce using rule 29 (Expresion -> ~ Expresion .)
    (               reduce using rule 29 (Expresion -> ~ Expresion .)
    NUMBER          reduce using rule 29 (Expresion -> ~ Expresion .)
    IGNORE          reduce using rule 29 (Expresion -> ~ Expresion .)
    ASSIGN          reduce using rule 29 (Expresion -> ~ Expresion .)
    POOL            reduce using rule 29 (Expresion -> ~ Expresion .)
    ELSE            reduce using rule 29 (Expresion -> ~ Expresion .)
    FI              reduce using rule 29 (Expresion -> ~ Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 73

    (30) Expresion -> ISVOID Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    DARROW          reduce using rule 30 (Expresion -> ISVOID Expresion .)
    LE              reduce using rule 30 (Expresion -> ISVOID Expresion .)
    /               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    *               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    -               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    +               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    ;               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    OF              reduce using rule 30 (Expresion -> ISVOID Expresion .)
    LOOP            reduce using rule 30 (Expresion -> ISVOID Expresion .)
    THEN            reduce using rule 30 (Expresion -> ISVOID Expresion .)
    )               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    OBJECTID        reduce using rule 30 (Expresion -> ISVOID Expresion .)
    ,               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    IN              reduce using rule 30 (Expresion -> ISVOID Expresion .)
    }               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    BOOL_CONST      reduce using rule 30 (Expresion -> ISVOID Expresion .)
    STR_CONST       reduce using rule 30 (Expresion -> ISVOID Expresion .)
    INT_CONST       reduce using rule 30 (Expresion -> ISVOID Expresion .)
    {               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    NEW             reduce using rule 30 (Expresion -> ISVOID Expresion .)
    LET             reduce using rule 30 (Expresion -> ISVOID Expresion .)
    WHILE           reduce using rule 30 (Expresion -> ISVOID Expresion .)
    IF              reduce using rule 30 (Expresion -> ISVOID Expresion .)
    ~               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    ISVOID          reduce using rule 30 (Expresion -> ISVOID Expresion .)
    NOT             reduce using rule 30 (Expresion -> ISVOID Expresion .)
    (               reduce using rule 30 (Expresion -> ISVOID Expresion .)
    NUMBER          reduce using rule 30 (Expresion -> ISVOID Expresion .)
    IGNORE          reduce using rule 30 (Expresion -> ISVOID Expresion .)
    ASSIGN          reduce using rule 30 (Expresion -> ISVOID Expresion .)
    POOL            reduce using rule 30 (Expresion -> ISVOID Expresion .)
    ELSE            reduce using rule 30 (Expresion -> ISVOID Expresion .)
    FI              reduce using rule 30 (Expresion -> ISVOID Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 74

    (31) Expresion -> NOT Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 31 (Expresion -> NOT Expresion .)
    DARROW          reduce using rule 31 (Expresion -> NOT Expresion .)
    LE              reduce using rule 31 (Expresion -> NOT Expresion .)
    ;               reduce using rule 31 (Expresion -> NOT Expresion .)
    OF              reduce using rule 31 (Expresion -> NOT Expresion .)
    LOOP            reduce using rule 31 (Expresion -> NOT Expresion .)
    THEN            reduce using rule 31 (Expresion -> NOT Expresion .)
    )               reduce using rule 31 (Expresion -> NOT Expresion .)
    OBJECTID        reduce using rule 31 (Expresion -> NOT Expresion .)
    ,               reduce using rule 31 (Expresion -> NOT Expresion .)
    IN              reduce using rule 31 (Expresion -> NOT Expresion .)
    }               reduce using rule 31 (Expresion -> NOT Expresion .)
    BOOL_CONST      reduce using rule 31 (Expresion -> NOT Expresion .)
    STR_CONST       reduce using rule 31 (Expresion -> NOT Expresion .)
    INT_CONST       reduce using rule 31 (Expresion -> NOT Expresion .)
    {               reduce using rule 31 (Expresion -> NOT Expresion .)
    NEW             reduce using rule 31 (Expresion -> NOT Expresion .)
    LET             reduce using rule 31 (Expresion -> NOT Expresion .)
    WHILE           reduce using rule 31 (Expresion -> NOT Expresion .)
    IF              reduce using rule 31 (Expresion -> NOT Expresion .)
    ~               reduce using rule 31 (Expresion -> NOT Expresion .)
    ISVOID          reduce using rule 31 (Expresion -> NOT Expresion .)
    NOT             reduce using rule 31 (Expresion -> NOT Expresion .)
    (               reduce using rule 31 (Expresion -> NOT Expresion .)
    NUMBER          reduce using rule 31 (Expresion -> NOT Expresion .)
    IGNORE          reduce using rule 31 (Expresion -> NOT Expresion .)
    ASSIGN          reduce using rule 31 (Expresion -> NOT Expresion .)
    POOL            reduce using rule 31 (Expresion -> NOT Expresion .)
    ELSE            reduce using rule 31 (Expresion -> NOT Expresion .)
    FI              reduce using rule 31 (Expresion -> NOT Expresion .)
    @               shift and go to state 54
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 75

    (49) exprOpcional -> ASSIGN Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    OBJECTID        reduce using rule 49 (exprOpcional -> ASSIGN Expresion .)
    ,               reduce using rule 49 (exprOpcional -> ASSIGN Expresion .)
    IN              reduce using rule 49 (exprOpcional -> ASSIGN Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 76

    (12) Metodo -> OBJECTID ( Formal , Formal ) . : TYPEID { Expresion } ;
    :               shift and go to state 96


state 77

    (13) Metodo -> OBJECTID ( ) : TYPEID { . Expresion }
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 97
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 78

    (42) Expresion -> OBJECTID ASSIGN Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    ;               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    OF              reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    LOOP            reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    THEN            reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    )               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    OBJECTID        reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    ,               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    IN              reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    }               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    BOOL_CONST      reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    STR_CONST       reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    INT_CONST       reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    {               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    NEW             reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    LET             reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    WHILE           reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    IF              reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    ~               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    ISVOID          reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    NOT             reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    (               reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    NUMBER          reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    IGNORE          reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    ASSIGN          reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    POOL            reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    ELSE            reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    FI              reduce using rule 42 (Expresion -> OBJECTID ASSIGN Expresion .)
    @               shift and go to state 54
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 79

    (50) Case -> OBJECTID : TYPEID . DARROW Expresion
    DARROW          shift and go to state 98


state 80

    (27) Expresion -> Expresion @ TYPEID . . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 99


state 81

    (33) Expresion -> Expresion = Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 33 (Expresion -> Expresion = Expresion .)
    OF              reduce using rule 33 (Expresion -> Expresion = Expresion .)
    LOOP            reduce using rule 33 (Expresion -> Expresion = Expresion .)
    THEN            reduce using rule 33 (Expresion -> Expresion = Expresion .)
    )               reduce using rule 33 (Expresion -> Expresion = Expresion .)
    OBJECTID        reduce using rule 33 (Expresion -> Expresion = Expresion .)
    ,               reduce using rule 33 (Expresion -> Expresion = Expresion .)
    IN              reduce using rule 33 (Expresion -> Expresion = Expresion .)
    }               reduce using rule 33 (Expresion -> Expresion = Expresion .)
    BOOL_CONST      reduce using rule 33 (Expresion -> Expresion = Expresion .)
    STR_CONST       reduce using rule 33 (Expresion -> Expresion = Expresion .)
    INT_CONST       reduce using rule 33 (Expresion -> Expresion = Expresion .)
    {               reduce using rule 33 (Expresion -> Expresion = Expresion .)
    NEW             reduce using rule 33 (Expresion -> Expresion = Expresion .)
    LET             reduce using rule 33 (Expresion -> Expresion = Expresion .)
    WHILE           reduce using rule 33 (Expresion -> Expresion = Expresion .)
    IF              reduce using rule 33 (Expresion -> Expresion = Expresion .)
    ~               reduce using rule 33 (Expresion -> Expresion = Expresion .)
    ISVOID          reduce using rule 33 (Expresion -> Expresion = Expresion .)
    NOT             reduce using rule 33 (Expresion -> Expresion = Expresion .)
    (               reduce using rule 33 (Expresion -> Expresion = Expresion .)
    NUMBER          reduce using rule 33 (Expresion -> Expresion = Expresion .)
    IGNORE          reduce using rule 33 (Expresion -> Expresion = Expresion .)
    ASSIGN          reduce using rule 33 (Expresion -> Expresion = Expresion .)
    POOL            reduce using rule 33 (Expresion -> Expresion = Expresion .)
    ELSE            reduce using rule 33 (Expresion -> Expresion = Expresion .)
    FI              reduce using rule 33 (Expresion -> Expresion = Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 82

    (34) Expresion -> Expresion DARROW Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    DARROW          reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    LE              reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    ;               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    OF              reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    LOOP            reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    THEN            reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    )               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    OBJECTID        reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    ,               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    IN              reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    }               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    BOOL_CONST      reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    STR_CONST       reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    INT_CONST       reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    {               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    NEW             reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    LET             reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    WHILE           reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    IF              reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    ~               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    ISVOID          reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    NOT             reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    (               reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    NUMBER          reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    IGNORE          reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    ASSIGN          reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    POOL            reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    ELSE            reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    FI              reduce using rule 34 (Expresion -> Expresion DARROW Expresion .)
    @               shift and go to state 54
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 83

    (35) Expresion -> Expresion LE Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    DARROW          reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    LE              reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    ;               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    OF              reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    LOOP            reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    THEN            reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    )               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    OBJECTID        reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    ,               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    IN              reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    }               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    BOOL_CONST      reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    STR_CONST       reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    INT_CONST       reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    {               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    NEW             reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    LET             reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    WHILE           reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    IF              reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    ~               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    ISVOID          reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    NOT             reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    (               reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    NUMBER          reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    IGNORE          reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    ASSIGN          reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    POOL            reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    ELSE            reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    FI              reduce using rule 35 (Expresion -> Expresion LE Expresion .)
    @               shift and go to state 54
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 84

    (36) Expresion -> Expresion / Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    DARROW          reduce using rule 36 (Expresion -> Expresion / Expresion .)
    LE              reduce using rule 36 (Expresion -> Expresion / Expresion .)
    /               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    *               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    -               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    +               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    ;               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    OF              reduce using rule 36 (Expresion -> Expresion / Expresion .)
    LOOP            reduce using rule 36 (Expresion -> Expresion / Expresion .)
    THEN            reduce using rule 36 (Expresion -> Expresion / Expresion .)
    )               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    OBJECTID        reduce using rule 36 (Expresion -> Expresion / Expresion .)
    ,               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    IN              reduce using rule 36 (Expresion -> Expresion / Expresion .)
    }               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    BOOL_CONST      reduce using rule 36 (Expresion -> Expresion / Expresion .)
    STR_CONST       reduce using rule 36 (Expresion -> Expresion / Expresion .)
    INT_CONST       reduce using rule 36 (Expresion -> Expresion / Expresion .)
    {               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    NEW             reduce using rule 36 (Expresion -> Expresion / Expresion .)
    LET             reduce using rule 36 (Expresion -> Expresion / Expresion .)
    WHILE           reduce using rule 36 (Expresion -> Expresion / Expresion .)
    IF              reduce using rule 36 (Expresion -> Expresion / Expresion .)
    ~               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    ISVOID          reduce using rule 36 (Expresion -> Expresion / Expresion .)
    NOT             reduce using rule 36 (Expresion -> Expresion / Expresion .)
    (               reduce using rule 36 (Expresion -> Expresion / Expresion .)
    NUMBER          reduce using rule 36 (Expresion -> Expresion / Expresion .)
    IGNORE          reduce using rule 36 (Expresion -> Expresion / Expresion .)
    ASSIGN          reduce using rule 36 (Expresion -> Expresion / Expresion .)
    POOL            reduce using rule 36 (Expresion -> Expresion / Expresion .)
    ELSE            reduce using rule 36 (Expresion -> Expresion / Expresion .)
    FI              reduce using rule 36 (Expresion -> Expresion / Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 85

    (37) Expresion -> Expresion * Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    DARROW          reduce using rule 37 (Expresion -> Expresion * Expresion .)
    LE              reduce using rule 37 (Expresion -> Expresion * Expresion .)
    /               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    *               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    -               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    +               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    ;               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    OF              reduce using rule 37 (Expresion -> Expresion * Expresion .)
    LOOP            reduce using rule 37 (Expresion -> Expresion * Expresion .)
    THEN            reduce using rule 37 (Expresion -> Expresion * Expresion .)
    )               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    OBJECTID        reduce using rule 37 (Expresion -> Expresion * Expresion .)
    ,               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    IN              reduce using rule 37 (Expresion -> Expresion * Expresion .)
    }               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    BOOL_CONST      reduce using rule 37 (Expresion -> Expresion * Expresion .)
    STR_CONST       reduce using rule 37 (Expresion -> Expresion * Expresion .)
    INT_CONST       reduce using rule 37 (Expresion -> Expresion * Expresion .)
    {               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    NEW             reduce using rule 37 (Expresion -> Expresion * Expresion .)
    LET             reduce using rule 37 (Expresion -> Expresion * Expresion .)
    WHILE           reduce using rule 37 (Expresion -> Expresion * Expresion .)
    IF              reduce using rule 37 (Expresion -> Expresion * Expresion .)
    ~               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    ISVOID          reduce using rule 37 (Expresion -> Expresion * Expresion .)
    NOT             reduce using rule 37 (Expresion -> Expresion * Expresion .)
    (               reduce using rule 37 (Expresion -> Expresion * Expresion .)
    NUMBER          reduce using rule 37 (Expresion -> Expresion * Expresion .)
    IGNORE          reduce using rule 37 (Expresion -> Expresion * Expresion .)
    ASSIGN          reduce using rule 37 (Expresion -> Expresion * Expresion .)
    POOL            reduce using rule 37 (Expresion -> Expresion * Expresion .)
    ELSE            reduce using rule 37 (Expresion -> Expresion * Expresion .)
    FI              reduce using rule 37 (Expresion -> Expresion * Expresion .)
    @               shift and go to state 54
    .               shift and go to state 55


state 86

    (38) Expresion -> Expresion - Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    DARROW          reduce using rule 38 (Expresion -> Expresion - Expresion .)
    LE              reduce using rule 38 (Expresion -> Expresion - Expresion .)
    -               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    +               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    ;               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    OF              reduce using rule 38 (Expresion -> Expresion - Expresion .)
    LOOP            reduce using rule 38 (Expresion -> Expresion - Expresion .)
    THEN            reduce using rule 38 (Expresion -> Expresion - Expresion .)
    )               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    OBJECTID        reduce using rule 38 (Expresion -> Expresion - Expresion .)
    ,               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    IN              reduce using rule 38 (Expresion -> Expresion - Expresion .)
    }               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    BOOL_CONST      reduce using rule 38 (Expresion -> Expresion - Expresion .)
    STR_CONST       reduce using rule 38 (Expresion -> Expresion - Expresion .)
    INT_CONST       reduce using rule 38 (Expresion -> Expresion - Expresion .)
    {               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    NEW             reduce using rule 38 (Expresion -> Expresion - Expresion .)
    LET             reduce using rule 38 (Expresion -> Expresion - Expresion .)
    WHILE           reduce using rule 38 (Expresion -> Expresion - Expresion .)
    IF              reduce using rule 38 (Expresion -> Expresion - Expresion .)
    ~               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    ISVOID          reduce using rule 38 (Expresion -> Expresion - Expresion .)
    NOT             reduce using rule 38 (Expresion -> Expresion - Expresion .)
    (               reduce using rule 38 (Expresion -> Expresion - Expresion .)
    NUMBER          reduce using rule 38 (Expresion -> Expresion - Expresion .)
    IGNORE          reduce using rule 38 (Expresion -> Expresion - Expresion .)
    ASSIGN          reduce using rule 38 (Expresion -> Expresion - Expresion .)
    POOL            reduce using rule 38 (Expresion -> Expresion - Expresion .)
    ELSE            reduce using rule 38 (Expresion -> Expresion - Expresion .)
    FI              reduce using rule 38 (Expresion -> Expresion - Expresion .)
    @               shift and go to state 54
    /               shift and go to state 59
    *               shift and go to state 60
    .               shift and go to state 55


state 87

    (40) Expresion -> Expresion + Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    =               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    DARROW          reduce using rule 40 (Expresion -> Expresion + Expresion .)
    LE              reduce using rule 40 (Expresion -> Expresion + Expresion .)
    -               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    +               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    ;               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    OF              reduce using rule 40 (Expresion -> Expresion + Expresion .)
    LOOP            reduce using rule 40 (Expresion -> Expresion + Expresion .)
    THEN            reduce using rule 40 (Expresion -> Expresion + Expresion .)
    )               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    OBJECTID        reduce using rule 40 (Expresion -> Expresion + Expresion .)
    ,               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    IN              reduce using rule 40 (Expresion -> Expresion + Expresion .)
    }               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    BOOL_CONST      reduce using rule 40 (Expresion -> Expresion + Expresion .)
    STR_CONST       reduce using rule 40 (Expresion -> Expresion + Expresion .)
    INT_CONST       reduce using rule 40 (Expresion -> Expresion + Expresion .)
    {               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    NEW             reduce using rule 40 (Expresion -> Expresion + Expresion .)
    LET             reduce using rule 40 (Expresion -> Expresion + Expresion .)
    WHILE           reduce using rule 40 (Expresion -> Expresion + Expresion .)
    IF              reduce using rule 40 (Expresion -> Expresion + Expresion .)
    ~               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    ISVOID          reduce using rule 40 (Expresion -> Expresion + Expresion .)
    NOT             reduce using rule 40 (Expresion -> Expresion + Expresion .)
    (               reduce using rule 40 (Expresion -> Expresion + Expresion .)
    NUMBER          reduce using rule 40 (Expresion -> Expresion + Expresion .)
    IGNORE          reduce using rule 40 (Expresion -> Expresion + Expresion .)
    ASSIGN          reduce using rule 40 (Expresion -> Expresion + Expresion .)
    POOL            reduce using rule 40 (Expresion -> Expresion + Expresion .)
    ELSE            reduce using rule 40 (Expresion -> Expresion + Expresion .)
    FI              reduce using rule 40 (Expresion -> Expresion + Expresion .)
    @               shift and go to state 54
    /               shift and go to state 59
    *               shift and go to state 60
    .               shift and go to state 55


state 88

    (19) Expresion -> { listNueva } .
    @               reduce using rule 19 (Expresion -> { listNueva } .)
    =               reduce using rule 19 (Expresion -> { listNueva } .)
    DARROW          reduce using rule 19 (Expresion -> { listNueva } .)
    LE              reduce using rule 19 (Expresion -> { listNueva } .)
    /               reduce using rule 19 (Expresion -> { listNueva } .)
    *               reduce using rule 19 (Expresion -> { listNueva } .)
    -               reduce using rule 19 (Expresion -> { listNueva } .)
    +               reduce using rule 19 (Expresion -> { listNueva } .)
    .               reduce using rule 19 (Expresion -> { listNueva } .)
    ;               reduce using rule 19 (Expresion -> { listNueva } .)
    OF              reduce using rule 19 (Expresion -> { listNueva } .)
    LOOP            reduce using rule 19 (Expresion -> { listNueva } .)
    THEN            reduce using rule 19 (Expresion -> { listNueva } .)
    )               reduce using rule 19 (Expresion -> { listNueva } .)
    OBJECTID        reduce using rule 19 (Expresion -> { listNueva } .)
    ,               reduce using rule 19 (Expresion -> { listNueva } .)
    IN              reduce using rule 19 (Expresion -> { listNueva } .)
    }               reduce using rule 19 (Expresion -> { listNueva } .)
    BOOL_CONST      reduce using rule 19 (Expresion -> { listNueva } .)
    STR_CONST       reduce using rule 19 (Expresion -> { listNueva } .)
    INT_CONST       reduce using rule 19 (Expresion -> { listNueva } .)
    {               reduce using rule 19 (Expresion -> { listNueva } .)
    NEW             reduce using rule 19 (Expresion -> { listNueva } .)
    LET             reduce using rule 19 (Expresion -> { listNueva } .)
    WHILE           reduce using rule 19 (Expresion -> { listNueva } .)
    IF              reduce using rule 19 (Expresion -> { listNueva } .)
    ~               reduce using rule 19 (Expresion -> { listNueva } .)
    ISVOID          reduce using rule 19 (Expresion -> { listNueva } .)
    NOT             reduce using rule 19 (Expresion -> { listNueva } .)
    (               reduce using rule 19 (Expresion -> { listNueva } .)
    NUMBER          reduce using rule 19 (Expresion -> { listNueva } .)
    IGNORE          reduce using rule 19 (Expresion -> { listNueva } .)
    ASSIGN          reduce using rule 19 (Expresion -> { listNueva } .)
    POOL            reduce using rule 19 (Expresion -> { listNueva } .)
    ELSE            reduce using rule 19 (Expresion -> { listNueva } .)
    FI              reduce using rule 19 (Expresion -> { listNueva } .)


state 89

    (53) listNueva -> Expresion ; .
    (54) listNueva -> Expresion ; . listNueva
    (53) listNueva -> . Expresion ;
    (54) listNueva -> . Expresion ; listNueva
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    }               reduce using rule 53 (listNueva -> Expresion ; .)
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 64
    listNueva                      shift and go to state 100
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 90

    (21) Expresion -> Case Expresion OF . CaseList ; ESAC
    (51) CaseList -> . Case
    (52) CaseList -> . Case CaseList
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    OBJECTID        shift and go to state 103

    Case                           shift and go to state 101
    CaseList                       shift and go to state 102

state 91

    (22) Expresion -> LET OBJECTID : . TYPEID exprOpcional lstArrow IN Expresion
    TYPEID          shift and go to state 104


state 92

    (25) Expresion -> exprOpcional OBJECTID ( . )
    (26) Expresion -> exprOpcional OBJECTID ( . lstExpr Expresion )
    (43) lstExpr -> . Expresion
    (44) lstExpr -> . Expresion , lstExpr
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    )               shift and go to state 105
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    exprOpcional                   shift and go to state 39
    lstExpr                        shift and go to state 106
    Expresion                      shift and go to state 107
    Case                           shift and go to state 37

state 93

    (23) Expresion -> WHILE Expresion LOOP . Expresion POOL
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 108
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 94

    (24) Expresion -> IF Expresion THEN . Expresion ELSE Expresion FI
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 109
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 95

    (32) Expresion -> ( Expresion ) .
    @               reduce using rule 32 (Expresion -> ( Expresion ) .)
    =               reduce using rule 32 (Expresion -> ( Expresion ) .)
    DARROW          reduce using rule 32 (Expresion -> ( Expresion ) .)
    LE              reduce using rule 32 (Expresion -> ( Expresion ) .)
    /               reduce using rule 32 (Expresion -> ( Expresion ) .)
    *               reduce using rule 32 (Expresion -> ( Expresion ) .)
    -               reduce using rule 32 (Expresion -> ( Expresion ) .)
    +               reduce using rule 32 (Expresion -> ( Expresion ) .)
    .               reduce using rule 32 (Expresion -> ( Expresion ) .)
    ;               reduce using rule 32 (Expresion -> ( Expresion ) .)
    OF              reduce using rule 32 (Expresion -> ( Expresion ) .)
    LOOP            reduce using rule 32 (Expresion -> ( Expresion ) .)
    THEN            reduce using rule 32 (Expresion -> ( Expresion ) .)
    )               reduce using rule 32 (Expresion -> ( Expresion ) .)
    OBJECTID        reduce using rule 32 (Expresion -> ( Expresion ) .)
    ,               reduce using rule 32 (Expresion -> ( Expresion ) .)
    IN              reduce using rule 32 (Expresion -> ( Expresion ) .)
    }               reduce using rule 32 (Expresion -> ( Expresion ) .)
    BOOL_CONST      reduce using rule 32 (Expresion -> ( Expresion ) .)
    STR_CONST       reduce using rule 32 (Expresion -> ( Expresion ) .)
    INT_CONST       reduce using rule 32 (Expresion -> ( Expresion ) .)
    {               reduce using rule 32 (Expresion -> ( Expresion ) .)
    NEW             reduce using rule 32 (Expresion -> ( Expresion ) .)
    LET             reduce using rule 32 (Expresion -> ( Expresion ) .)
    WHILE           reduce using rule 32 (Expresion -> ( Expresion ) .)
    IF              reduce using rule 32 (Expresion -> ( Expresion ) .)
    ~               reduce using rule 32 (Expresion -> ( Expresion ) .)
    ISVOID          reduce using rule 32 (Expresion -> ( Expresion ) .)
    NOT             reduce using rule 32 (Expresion -> ( Expresion ) .)
    (               reduce using rule 32 (Expresion -> ( Expresion ) .)
    NUMBER          reduce using rule 32 (Expresion -> ( Expresion ) .)
    IGNORE          reduce using rule 32 (Expresion -> ( Expresion ) .)
    ASSIGN          reduce using rule 32 (Expresion -> ( Expresion ) .)
    POOL            reduce using rule 32 (Expresion -> ( Expresion ) .)
    ELSE            reduce using rule 32 (Expresion -> ( Expresion ) .)
    FI              reduce using rule 32 (Expresion -> ( Expresion ) .)


state 96

    (12) Metodo -> OBJECTID ( Formal , Formal ) : . TYPEID { Expresion } ;
    TYPEID          shift and go to state 110


state 97

    (13) Metodo -> OBJECTID ( ) : TYPEID { Expresion . }
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    }               shift and go to state 111
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 98

    (50) Case -> OBJECTID : TYPEID DARROW . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 112
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 99

    (27) Expresion -> Expresion @ TYPEID . . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 113


state 100

    (54) listNueva -> Expresion ; listNueva .
    }               reduce using rule 54 (listNueva -> Expresion ; listNueva .)


state 101

    (51) CaseList -> Case .
    (52) CaseList -> Case . CaseList
    (51) CaseList -> . Case
    (52) CaseList -> . Case CaseList
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    ;               reduce using rule 51 (CaseList -> Case .)
    OBJECTID        shift and go to state 103

    Case                           shift and go to state 101
    CaseList                       shift and go to state 114

state 102

    (21) Expresion -> Case Expresion OF CaseList . ; ESAC
    ;               shift and go to state 115


state 103

    (50) Case -> OBJECTID . : TYPEID DARROW Expresion
    :               shift and go to state 53


state 104

    (22) Expresion -> LET OBJECTID : TYPEID . exprOpcional lstArrow IN Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    ,               reduce using rule 48 (exprOpcional -> .)
    IN              reduce using rule 48 (exprOpcional -> .)
    ASSIGN          shift and go to state 48
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47

    exprOpcional                   shift and go to state 116
    Expresion                      shift and go to state 117
    Case                           shift and go to state 37

state 105

    (25) Expresion -> exprOpcional OBJECTID ( ) .
    @               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    =               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    DARROW          reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    LE              reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    /               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    *               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    -               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    +               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    .               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    ;               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    OF              reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    LOOP            reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    THEN            reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    )               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    OBJECTID        reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    ,               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    IN              reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    }               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    BOOL_CONST      reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    STR_CONST       reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    INT_CONST       reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    {               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    NEW             reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    LET             reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    WHILE           reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    IF              reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    ~               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    ISVOID          reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    NOT             reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    (               reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    NUMBER          reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    IGNORE          reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    ASSIGN          reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    POOL            reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    ELSE            reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)
    FI              reduce using rule 25 (Expresion -> exprOpcional OBJECTID ( ) .)


state 106

    (26) Expresion -> exprOpcional OBJECTID ( lstExpr . Expresion )
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    exprOpcional                   shift and go to state 39
    Expresion                      shift and go to state 118
    Case                           shift and go to state 37

state 107

    (43) lstExpr -> Expresion .
    (44) lstExpr -> Expresion . , lstExpr
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    BOOL_CONST      reduce using rule 43 (lstExpr -> Expresion .)
    STR_CONST       reduce using rule 43 (lstExpr -> Expresion .)
    INT_CONST       reduce using rule 43 (lstExpr -> Expresion .)
    OBJECTID        reduce using rule 43 (lstExpr -> Expresion .)
    {               reduce using rule 43 (lstExpr -> Expresion .)
    NEW             reduce using rule 43 (lstExpr -> Expresion .)
    LET             reduce using rule 43 (lstExpr -> Expresion .)
    WHILE           reduce using rule 43 (lstExpr -> Expresion .)
    IF              reduce using rule 43 (lstExpr -> Expresion .)
    ~               reduce using rule 43 (lstExpr -> Expresion .)
    ISVOID          reduce using rule 43 (lstExpr -> Expresion .)
    NOT             reduce using rule 43 (lstExpr -> Expresion .)
    (               reduce using rule 43 (lstExpr -> Expresion .)
    NUMBER          reduce using rule 43 (lstExpr -> Expresion .)
    IGNORE          reduce using rule 43 (lstExpr -> Expresion .)
    ASSIGN          reduce using rule 43 (lstExpr -> Expresion .)
    ,               shift and go to state 119
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 108

    (23) Expresion -> WHILE Expresion LOOP Expresion . POOL
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    POOL            shift and go to state 120
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 109

    (24) Expresion -> IF Expresion THEN Expresion . ELSE Expresion FI
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    ELSE            shift and go to state 121
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 110

    (12) Metodo -> OBJECTID ( Formal , Formal ) : TYPEID . { Expresion } ;
    {               shift and go to state 122


state 111

    (13) Metodo -> OBJECTID ( ) : TYPEID { Expresion } .
    ;               reduce using rule 13 (Metodo -> OBJECTID ( ) : TYPEID { Expresion } .)


state 112

    (50) Case -> OBJECTID : TYPEID DARROW Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    BOOL_CONST      reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    STR_CONST       reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    INT_CONST       reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    OBJECTID        reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    {               reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    NEW             reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    LET             reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    WHILE           reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    IF              reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    ~               reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    ISVOID          reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    NOT             reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    (               reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    NUMBER          reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    IGNORE          reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    ASSIGN          reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    ;               reduce using rule 50 (Case -> OBJECTID : TYPEID DARROW Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 113

    (27) Expresion -> Expresion @ TYPEID . OBJECTID . ( lstExpr Expresion )
    (28) Expresion -> Expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 123


state 114

    (52) CaseList -> Case CaseList .
    ;               reduce using rule 52 (CaseList -> Case CaseList .)


state 115

    (21) Expresion -> Case Expresion OF CaseList ; . ESAC
    ESAC            shift and go to state 124


state 116

    (22) Expresion -> LET OBJECTID : TYPEID exprOpcional . lstArrow IN Expresion
    (25) Expresion -> exprOpcional . OBJECTID ( )
    (26) Expresion -> exprOpcional . OBJECTID ( lstExpr Expresion )
    (45) lstArrow -> .
    (46) lstArrow -> . , OBJECTID : TYPEID exprOpcional lstArrow
    OBJECTID        shift and go to state 68
    IN              reduce using rule 45 (lstArrow -> .)
    ,               shift and go to state 126

    lstArrow                       shift and go to state 125

state 117

    (47) exprOpcional -> Expresion . .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    .               shift and go to state 55
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62


state 118

    (26) Expresion -> exprOpcional OBJECTID ( lstExpr Expresion . )
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    )               shift and go to state 127
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 119

    (44) lstExpr -> Expresion , . lstExpr
    (43) lstExpr -> . Expresion
    (44) lstExpr -> . Expresion , lstExpr
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 107
    lstExpr                        shift and go to state 128
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 120

    (23) Expresion -> WHILE Expresion LOOP Expresion POOL .
    @               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    =               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    DARROW          reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LE              reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    /               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    *               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    -               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    +               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    .               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ;               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OF              reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LOOP            reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    THEN            reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    )               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OBJECTID        reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ,               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    IN              reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    }               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    BOOL_CONST      reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    STR_CONST       reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    INT_CONST       reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    {               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    NEW             reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LET             reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    WHILE           reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    IF              reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ~               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ISVOID          reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    NOT             reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    (               reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    NUMBER          reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    IGNORE          reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ASSIGN          reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    POOL            reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ELSE            reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    FI              reduce using rule 23 (Expresion -> WHILE Expresion LOOP Expresion POOL .)


state 121

    (24) Expresion -> IF Expresion THEN Expresion ELSE . Expresion FI
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 129
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 122

    (12) Metodo -> OBJECTID ( Formal , Formal ) : TYPEID { . Expresion } ;
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 130
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 123

    (27) Expresion -> Expresion @ TYPEID . OBJECTID ( . lstExpr Expresion )
    (28) Expresion -> Expresion @ TYPEID . OBJECTID ( . )
    (43) lstExpr -> . Expresion
    (44) lstExpr -> . Expresion , lstExpr
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    )               shift and go to state 132
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 107
    lstExpr                        shift and go to state 131
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 124

    (21) Expresion -> Case Expresion OF CaseList ; ESAC .
    @               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    =               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    DARROW          reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    LE              reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    /               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    *               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    -               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    +               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    .               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    ;               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    OF              reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    LOOP            reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    THEN            reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    )               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    OBJECTID        reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    ,               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    IN              reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    }               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    BOOL_CONST      reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    STR_CONST       reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    INT_CONST       reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    {               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    NEW             reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    LET             reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    WHILE           reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    IF              reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    ~               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    ISVOID          reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    NOT             reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    (               reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    NUMBER          reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    IGNORE          reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    ASSIGN          reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    POOL            reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    ELSE            reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)
    FI              reduce using rule 21 (Expresion -> Case Expresion OF CaseList ; ESAC .)


state 125

    (22) Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow . IN Expresion
    IN              shift and go to state 133


state 126

    (46) lstArrow -> , . OBJECTID : TYPEID exprOpcional lstArrow
    OBJECTID        shift and go to state 134


state 127

    (26) Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .
    @               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    =               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    DARROW          reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    LE              reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    /               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    *               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    -               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    +               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    .               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    ;               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    OF              reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    LOOP            reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    THEN            reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    )               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    OBJECTID        reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    ,               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    IN              reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    }               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    BOOL_CONST      reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    STR_CONST       reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    INT_CONST       reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    {               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    NEW             reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    LET             reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    WHILE           reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    IF              reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    ~               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    ISVOID          reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    NOT             reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    (               reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    NUMBER          reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    IGNORE          reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    ASSIGN          reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    POOL            reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    ELSE            reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)
    FI              reduce using rule 26 (Expresion -> exprOpcional OBJECTID ( lstExpr Expresion ) .)


state 128

    (44) lstExpr -> Expresion , lstExpr .
    BOOL_CONST      reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    STR_CONST       reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    INT_CONST       reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    OBJECTID        reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    {               reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    NEW             reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    LET             reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    WHILE           reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    IF              reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    ~               reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    ISVOID          reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    NOT             reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    (               reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    NUMBER          reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    IGNORE          reduce using rule 44 (lstExpr -> Expresion , lstExpr .)
    ASSIGN          reduce using rule 44 (lstExpr -> Expresion , lstExpr .)


state 129

    (24) Expresion -> IF Expresion THEN Expresion ELSE Expresion . FI
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    FI              shift and go to state 135
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 130

    (12) Metodo -> OBJECTID ( Formal , Formal ) : TYPEID { Expresion . } ;
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    }               shift and go to state 136
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 131

    (27) Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr . Expresion )
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    Expresion                      shift and go to state 137
    Case                           shift and go to state 37
    exprOpcional                   shift and go to state 39

state 132

    (28) Expresion -> Expresion @ TYPEID . OBJECTID ( ) .
    @               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    DARROW          reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    OBJECTID        reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    BOOL_CONST      reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    STR_CONST       reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    INT_CONST       reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    {               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    NEW             reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LET             reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    WHILE           reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    IF              reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ~               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ISVOID          reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    NOT             reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    (               reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    NUMBER          reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    IGNORE          reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ASSIGN          reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 28 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)


state 133

    (22) Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN . Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47
    ASSIGN          shift and go to state 48

    exprOpcional                   shift and go to state 39
    Expresion                      shift and go to state 138
    Case                           shift and go to state 37

state 134

    (46) lstArrow -> , OBJECTID . : TYPEID exprOpcional lstArrow
    :               shift and go to state 139


state 135

    (24) Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .
    @               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    =               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    DARROW          reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LE              reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    /               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    *               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    -               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    +               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    .               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ;               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OF              reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LOOP            reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    THEN            reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    )               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OBJECTID        reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ,               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    IN              reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    }               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    BOOL_CONST      reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    STR_CONST       reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    INT_CONST       reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    {               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    NEW             reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LET             reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    WHILE           reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    IF              reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ~               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ISVOID          reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    NOT             reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    (               reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    NUMBER          reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    IGNORE          reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ASSIGN          reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    POOL            reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ELSE            reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    FI              reduce using rule 24 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)


state 136

    (12) Metodo -> OBJECTID ( Formal , Formal ) : TYPEID { Expresion } . ;
    ;               shift and go to state 140


state 137

    (27) Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion . )
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
    )               shift and go to state 141
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 138

    (22) Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .
    (27) Expresion -> Expresion . @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (33) Expresion -> Expresion . = Expresion
    (34) Expresion -> Expresion . DARROW Expresion
    (35) Expresion -> Expresion . LE Expresion
    (36) Expresion -> Expresion . / Expresion
    (37) Expresion -> Expresion . * Expresion
    (38) Expresion -> Expresion . - Expresion
    (40) Expresion -> Expresion . + Expresion
    (47) exprOpcional -> Expresion . .
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    OF              reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    LOOP            reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    THEN            reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    )               reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    OBJECTID        reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    ,               reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    IN              reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    }               reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    BOOL_CONST      reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    STR_CONST       reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    INT_CONST       reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    {               reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    NEW             reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    LET             reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    WHILE           reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    IF              reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    ~               reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    ISVOID          reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    NOT             reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    (               reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    NUMBER          reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    IGNORE          reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    ASSIGN          reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    POOL            reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    ELSE            reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    FI              reduce using rule 22 (Expresion -> LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion .)
    @               shift and go to state 54
    =               shift and go to state 56
    DARROW          shift and go to state 57
    LE              shift and go to state 58
    /               shift and go to state 59
    *               shift and go to state 60
    -               shift and go to state 61
    +               shift and go to state 62
    .               shift and go to state 55


state 139

    (46) lstArrow -> , OBJECTID : . TYPEID exprOpcional lstArrow
    TYPEID          shift and go to state 142


state 140

    (12) Metodo -> OBJECTID ( Formal , Formal ) : TYPEID { Expresion } ; .
    ;               reduce using rule 12 (Metodo -> OBJECTID ( Formal , Formal ) : TYPEID { Expresion } ; .)


state 141

    (27) Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .
    @               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    =               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    DARROW          reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    LE              reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    /               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    *               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    -               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    +               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    .               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    ;               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    OF              reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    LOOP            reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    THEN            reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    )               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    OBJECTID        reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    ,               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    IN              reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    }               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    BOOL_CONST      reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    STR_CONST       reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    INT_CONST       reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    {               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    NEW             reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    LET             reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    WHILE           reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    IF              reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    ~               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    ISVOID          reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    NOT             reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    (               reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    NUMBER          reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    IGNORE          reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    ASSIGN          reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    POOL            reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    ELSE            reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)
    FI              reduce using rule 27 (Expresion -> Expresion @ TYPEID . OBJECTID ( lstExpr Expresion ) .)


state 142

    (46) lstArrow -> , OBJECTID : TYPEID . exprOpcional lstArrow
    (47) exprOpcional -> . Expresion .
    (48) exprOpcional -> .
    (49) exprOpcional -> . ASSIGN Expresion
    (15) Expresion -> . BOOL_CONST
    (16) Expresion -> . STR_CONST
    (17) Expresion -> . INT_CONST
    (18) Expresion -> . OBJECTID
    (19) Expresion -> . { listNueva }
    (20) Expresion -> . NEW TYPEID
    (21) Expresion -> . Case Expresion OF CaseList ; ESAC
    (22) Expresion -> . LET OBJECTID : TYPEID exprOpcional lstArrow IN Expresion
    (23) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (24) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (25) Expresion -> . exprOpcional OBJECTID ( )
    (26) Expresion -> . exprOpcional OBJECTID ( lstExpr Expresion )
    (27) Expresion -> . Expresion @ TYPEID . OBJECTID ( lstExpr Expresion )
    (28) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (29) Expresion -> . ~ Expresion
    (30) Expresion -> . ISVOID Expresion
    (31) Expresion -> . NOT Expresion
    (32) Expresion -> . ( Expresion )
    (33) Expresion -> . Expresion = Expresion
    (34) Expresion -> . Expresion DARROW Expresion
    (35) Expresion -> . Expresion LE Expresion
    (36) Expresion -> . Expresion / Expresion
    (37) Expresion -> . Expresion * Expresion
    (38) Expresion -> . Expresion - Expresion
    (39) Expresion -> . NUMBER
    (40) Expresion -> . Expresion + Expresion
    (41) Expresion -> . IGNORE
    (42) Expresion -> . OBJECTID ASSIGN Expresion
    (50) Case -> . OBJECTID : TYPEID DARROW Expresion
  ! shift/reduce conflict for OBJECTID resolved as shift
    ,               reduce using rule 48 (exprOpcional -> .)
    IN              reduce using rule 48 (exprOpcional -> .)
    ASSIGN          shift and go to state 48
    BOOL_CONST      shift and go to state 32
    STR_CONST       shift and go to state 33
    INT_CONST       shift and go to state 34
    OBJECTID        shift and go to state 29
    {               shift and go to state 35
    NEW             shift and go to state 36
    LET             shift and go to state 38
    WHILE           shift and go to state 40
    IF              shift and go to state 41
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NOT             shift and go to state 45
    (               shift and go to state 42
    NUMBER          shift and go to state 46
    IGNORE          shift and go to state 47

    exprOpcional                   shift and go to state 143
    Expresion                      shift and go to state 117
    Case                           shift and go to state 37

state 143

    (46) lstArrow -> , OBJECTID : TYPEID exprOpcional . lstArrow
    (25) Expresion -> exprOpcional . OBJECTID ( )
    (26) Expresion -> exprOpcional . OBJECTID ( lstExpr Expresion )
    (45) lstArrow -> .
    (46) lstArrow -> . , OBJECTID : TYPEID exprOpcional lstArrow
    OBJECTID        shift and go to state 68
    IN              reduce using rule 45 (lstArrow -> .)
    ,               shift and go to state 126

    lstArrow                       shift and go to state 144

state 144

    (46) lstArrow -> , OBJECTID : TYPEID exprOpcional lstArrow .
    IN              reduce using rule 46 (lstArrow -> , OBJECTID : TYPEID exprOpcional lstArrow .)


Conflicts:

shift/reduce conflict for OBJECTID in state 25 resolved as shift
shift/reduce conflict for ASSIGN in state 29 resolved as shift
shift/reduce conflict for OBJECTID in state 35 resolved as shift
shift/reduce conflict for OBJECTID in state 37 resolved as shift
shift/reduce conflict for OBJECTID in state 40 resolved as shift
shift/reduce conflict for OBJECTID in state 41 resolved as shift
shift/reduce conflict for OBJECTID in state 42 resolved as shift
shift/reduce conflict for OBJECTID in state 43 resolved as shift
shift/reduce conflict for OBJECTID in state 44 resolved as shift
shift/reduce conflict for OBJECTID in state 45 resolved as shift
shift/reduce conflict for OBJECTID in state 48 resolved as shift
shift/reduce conflict for OBJECTID in state 52 resolved as shift
shift/reduce conflict for OBJECTID in state 56 resolved as shift
shift/reduce conflict for OBJECTID in state 57 resolved as shift
shift/reduce conflict for OBJECTID in state 58 resolved as shift
shift/reduce conflict for OBJECTID in state 59 resolved as shift
shift/reduce conflict for OBJECTID in state 60 resolved as shift
shift/reduce conflict for OBJECTID in state 61 resolved as shift
shift/reduce conflict for OBJECTID in state 62 resolved as shift
shift/reduce conflict for @ in state 72 resolved as shift
shift/reduce conflict for = in state 72 resolved as shift
shift/reduce conflict for DARROW in state 72 resolved as shift
shift/reduce conflict for LE in state 72 resolved as shift
shift/reduce conflict for / in state 72 resolved as shift
shift/reduce conflict for * in state 72 resolved as shift
shift/reduce conflict for - in state 72 resolved as shift
shift/reduce conflict for + in state 72 resolved as shift
shift/reduce conflict for . in state 72 resolved as shift
shift/reduce conflict for OBJECTID in state 77 resolved as shift
shift/reduce conflict for @ in state 81 resolved as shift
shift/reduce conflict for = in state 81 resolved as shift
shift/reduce conflict for DARROW in state 81 resolved as shift
shift/reduce conflict for LE in state 81 resolved as shift
shift/reduce conflict for / in state 81 resolved as shift
shift/reduce conflict for * in state 81 resolved as shift
shift/reduce conflict for - in state 81 resolved as shift
shift/reduce conflict for + in state 81 resolved as shift
shift/reduce conflict for . in state 81 resolved as shift
shift/reduce conflict for OBJECTID in state 89 resolved as shift
shift/reduce conflict for OBJECTID in state 92 resolved as shift
shift/reduce conflict for OBJECTID in state 93 resolved as shift
shift/reduce conflict for OBJECTID in state 94 resolved as shift
shift/reduce conflict for OBJECTID in state 98 resolved as shift
shift/reduce conflict for OBJECTID in state 104 resolved as shift
shift/reduce conflict for OBJECTID in state 106 resolved as shift
shift/reduce conflict for OBJECTID in state 119 resolved as shift
shift/reduce conflict for OBJECTID in state 121 resolved as shift
shift/reduce conflict for OBJECTID in state 122 resolved as shift
shift/reduce conflict for OBJECTID in state 123 resolved as shift
shift/reduce conflict for OBJECTID in state 131 resolved as shift
shift/reduce conflict for OBJECTID in state 133 resolved as shift
shift/reduce conflict for @ in state 138 resolved as shift
shift/reduce conflict for = in state 138 resolved as shift
shift/reduce conflict for DARROW in state 138 resolved as shift
shift/reduce conflict for LE in state 138 resolved as shift
shift/reduce conflict for / in state 138 resolved as shift
shift/reduce conflict for * in state 138 resolved as shift
shift/reduce conflict for - in state 138 resolved as shift
shift/reduce conflict for + in state 138 resolved as shift
shift/reduce conflict for . in state 138 resolved as shift
shift/reduce conflict for OBJECTID in state 142 resolved as shift